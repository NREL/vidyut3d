#ifndef MECHANISM_H
#define MECHANISM_H

#include <AMReX_Gpu.H>
#include <AMReX_REAL.H>
#include <UnivConstants.H>
#include <VarDefines.H>

/* Elements
0  E
1  N
2  H
*/

// Species
#define E_ID 0
#define H_ID 1
#define H2_ID 2
#define H2v1_ID 3
#define H2v2_ID 4
#define H2v3_ID 5
#define N_ID 6
#define N2_ID 7
#define N2v1_ID 8
#define N2v2_ID 9
#define N2v3_ID 10
#define N2v4_ID 11
#define N2v5_ID 12
#define N2v6_ID 13
#define N2v7_ID 14
#define N2v8_ID 15
#define N2A3_ID 16
#define N2B3_ID 17
#define N2a1_ID 18
#define N2C3_ID 19
#define H2B3_ID 20
#define H2B1_ID 21
#define H2C3_ID 22
#define H2A3_ID 23
#define H2R_ID 24
#define N2D_ID 25
#define N2P_ID 26
#define NH_ID 27
#define NH2_ID 28
#define NH3_ID 29
#define Hn_ID 30
#define Hp_ID 31
#define H2p_ID 32
#define H3p_ID 33
#define Np_ID 34
#define N2p_ID 35
#define N3p_ID 36
#define N4p_ID 37
#define NHp_ID 38
#define N2Hp_ID 39
#define NH2p_ID 40
#define NH3p_ID 41
#define NH4p_ID 42

#define NUM_GAS_ELEMENTS 3    // Elements in the homogeneous phase
#define NUM_GAS_SPECIES 43    // Species in the homogeneous phase
#define NUM_GAS_REACTIONS 293 // Reactions in the homogeneous phase

#define SITE_DENSITY 0.000000E+00 // mol/cm^2

#define NUM_SURFACE_ELEMENTS 0  // Additional elements in heterogeneous phase
#define NUM_SURFACE_SPECIES 0   // Species in the heterogeneous phase
#define NUM_SURFACE_REACTIONS 0 // Reactions in the heterogeneous phase

#define NUM_ELEMENTS (NUM_GAS_ELEMENTS + NUM_SURFACE_ELEMENTS)
#define NUM_SPECIES (NUM_GAS_SPECIES + NUM_SURFACE_SPECIES)
#define NUM_REACTIONS (NUM_GAS_REACTIONS + NUM_SURFACE_REACTIONS)

#define NUM_IONS 14

#define NUM_FIT 4

//  ALWAYS on CPU stuff -- can have different def depending on if we are CPU or
//  GPU based. Defined in mechanism.cpp
void atomicWeight(amrex::Real *awt);
//  MISC
void CKAWT(amrex::Real *awt);
void CKNCF(int *ncf);
void CKSYME_STR(amrex::Vector<std::string> &ename);
void CKSYMS_STR(amrex::Vector<std::string> &kname);
void GET_RMAP(int *_rmap);
void CKINU(const int i, int &nspec, int *ki, int *nu);

// A few mechanism parameters
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKINDX(int &mm, int &kk, int &ii,
                                                     int &nfit) {
  mm = 3;
  kk = 43;
  ii = 293;
  nfit = -1; // Why do you need this anyway ?
}

//  inverse molecular weights
#ifdef AMREX_USE_GPU
AMREX_GPU_CONSTANT const amrex::Real global_imw[43] = {
    1822.8884868472639482, // E
    0.9920634920634921,    // H
    0.4960317460317460,    // H2
    0.4960317460317460,    // H2v1
    0.4960317460317460,    // H2v2
    0.4960317460317460,    // H2v3
    0.0713928749910759,    // N
    0.0356964374955379,    // N2
    0.0356964374955379,    // N2v1
    0.0356964374955379,    // N2v2
    0.0356964374955379,    // N2v3
    0.0356964374955379,    // N2v4
    0.0356964374955379,    // N2v5
    0.0356964374955379,    // N2v6
    0.0356964374955379,    // N2v7
    0.0356964374955379,    // N2v8
    0.0356964374955379,    // N2A3
    0.0356964374955379,    // N2B3
    0.0356964374955379,    // N2a1
    0.0356964374955379,    // N2C3
    0.4960317460317460,    // H2B3
    0.4960317460317460,    // H2B1
    0.4960317460317460,    // H2C3
    0.4960317460317460,    // H2A3
    0.4960317460317460,    // H2R
    0.0713928749910759,    // N2D
    0.0713928749910759,    // N2P
    0.0666000666000666,    // NH
    0.0624102852150034,    // NH2
    0.0587164582232400,    // NH3
    0.9915238788897552,    // H-
    0.9926036929001966,    // H+
    0.4961667594819952,    // H2+
    0.3307478312219284,    // H3+
    0.0713956711808946,    // N+
    0.0356971365293034,    // N2+
    0.0237979356766708,    // N3+
    0.0178483935044992,    // N4+
    0.0666024999529374,    // NH+
    0.0344572704350588,    // N2H+
    0.0624124220308800,    // NH2+
    0.0587183495805802,    // NH3+
    0.0554371313097423,    // NH4+
};
#endif
const amrex::Real h_global_imw[43] = {
    1822.8884868472639482, // E
    0.9920634920634921,    // H
    0.4960317460317460,    // H2
    0.4960317460317460,    // H2v1
    0.4960317460317460,    // H2v2
    0.4960317460317460,    // H2v3
    0.0713928749910759,    // N
    0.0356964374955379,    // N2
    0.0356964374955379,    // N2v1
    0.0356964374955379,    // N2v2
    0.0356964374955379,    // N2v3
    0.0356964374955379,    // N2v4
    0.0356964374955379,    // N2v5
    0.0356964374955379,    // N2v6
    0.0356964374955379,    // N2v7
    0.0356964374955379,    // N2v8
    0.0356964374955379,    // N2A3
    0.0356964374955379,    // N2B3
    0.0356964374955379,    // N2a1
    0.0356964374955379,    // N2C3
    0.4960317460317460,    // H2B3
    0.4960317460317460,    // H2B1
    0.4960317460317460,    // H2C3
    0.4960317460317460,    // H2A3
    0.4960317460317460,    // H2R
    0.0713928749910759,    // N2D
    0.0713928749910759,    // N2P
    0.0666000666000666,    // NH
    0.0624102852150034,    // NH2
    0.0587164582232400,    // NH3
    0.9915238788897552,    // H-
    0.9926036929001966,    // H+
    0.4961667594819952,    // H2+
    0.3307478312219284,    // H3+
    0.0713956711808946,    // N+
    0.0356971365293034,    // N2+
    0.0237979356766708,    // N3+
    0.0178483935044992,    // N4+
    0.0666024999529374,    // NH+
    0.0344572704350588,    // N2H+
    0.0624124220308800,    // NH2+
    0.0587183495805802,    // NH3+
    0.0554371313097423,    // NH4+
};

//  molecular weights
#ifdef AMREX_USE_GPU
AMREX_GPU_CONSTANT const amrex::Real global_mw[43] = {
    0.000549,  // E
    1.008000,  // H
    2.016000,  // H2
    2.016000,  // H2v1
    2.016000,  // H2v2
    2.016000,  // H2v3
    14.007000, // N
    28.014000, // N2
    28.014000, // N2v1
    28.014000, // N2v2
    28.014000, // N2v3
    28.014000, // N2v4
    28.014000, // N2v5
    28.014000, // N2v6
    28.014000, // N2v7
    28.014000, // N2v8
    28.014000, // N2A3
    28.014000, // N2B3
    28.014000, // N2a1
    28.014000, // N2C3
    2.016000,  // H2B3
    2.016000,  // H2B1
    2.016000,  // H2C3
    2.016000,  // H2A3
    2.016000,  // H2R
    14.007000, // N2D
    14.007000, // N2P
    15.015000, // NH
    16.023000, // NH2
    17.031000, // NH3
    1.008549,  // H-
    1.007451,  // H+
    2.015451,  // H2+
    3.023451,  // H3+
    14.006451, // N+
    28.013451, // N2+
    42.020451, // N3+
    56.027451, // N4+
    15.014451, // NH+
    29.021451, // N2H+
    16.022451, // NH2+
    17.030451, // NH3+
    18.038451, // NH4+
};
#endif
const amrex::Real h_global_mw[43] = {
    0.000549,  // E
    1.008000,  // H
    2.016000,  // H2
    2.016000,  // H2v1
    2.016000,  // H2v2
    2.016000,  // H2v3
    14.007000, // N
    28.014000, // N2
    28.014000, // N2v1
    28.014000, // N2v2
    28.014000, // N2v3
    28.014000, // N2v4
    28.014000, // N2v5
    28.014000, // N2v6
    28.014000, // N2v7
    28.014000, // N2v8
    28.014000, // N2A3
    28.014000, // N2B3
    28.014000, // N2a1
    28.014000, // N2C3
    2.016000,  // H2B3
    2.016000,  // H2B1
    2.016000,  // H2C3
    2.016000,  // H2A3
    2.016000,  // H2R
    14.007000, // N2D
    14.007000, // N2P
    15.015000, // NH
    16.023000, // NH2
    17.031000, // NH3
    1.008549,  // H-
    1.007451,  // H+
    2.015451,  // H2+
    3.023451,  // H3+
    14.006451, // N+
    28.013451, // N2+
    42.020451, // N3+
    56.027451, // N4+
    15.014451, // NH+
    29.021451, // N2H+
    16.022451, // NH2+
    17.030451, // NH3+
    18.038451, // NH4+
};

//  inverse molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void get_imw(amrex::Real *imw_new) {
  imw_new[0] = 1822.8884868472639482; // E
  imw_new[1] = 0.9920634920634921;    // H
  imw_new[2] = 0.4960317460317460;    // H2
  imw_new[3] = 0.4960317460317460;    // H2v1
  imw_new[4] = 0.4960317460317460;    // H2v2
  imw_new[5] = 0.4960317460317460;    // H2v3
  imw_new[6] = 0.0713928749910759;    // N
  imw_new[7] = 0.0356964374955379;    // N2
  imw_new[8] = 0.0356964374955379;    // N2v1
  imw_new[9] = 0.0356964374955379;    // N2v2
  imw_new[10] = 0.0356964374955379;   // N2v3
  imw_new[11] = 0.0356964374955379;   // N2v4
  imw_new[12] = 0.0356964374955379;   // N2v5
  imw_new[13] = 0.0356964374955379;   // N2v6
  imw_new[14] = 0.0356964374955379;   // N2v7
  imw_new[15] = 0.0356964374955379;   // N2v8
  imw_new[16] = 0.0356964374955379;   // N2A3
  imw_new[17] = 0.0356964374955379;   // N2B3
  imw_new[18] = 0.0356964374955379;   // N2a1
  imw_new[19] = 0.0356964374955379;   // N2C3
  imw_new[20] = 0.4960317460317460;   // H2B3
  imw_new[21] = 0.4960317460317460;   // H2B1
  imw_new[22] = 0.4960317460317460;   // H2C3
  imw_new[23] = 0.4960317460317460;   // H2A3
  imw_new[24] = 0.4960317460317460;   // H2R
  imw_new[25] = 0.0713928749910759;   // N2D
  imw_new[26] = 0.0713928749910759;   // N2P
  imw_new[27] = 0.0666000666000666;   // NH
  imw_new[28] = 0.0624102852150034;   // NH2
  imw_new[29] = 0.0587164582232400;   // NH3
  imw_new[30] = 0.9915238788897552;   // H-
  imw_new[31] = 0.9926036929001966;   // H+
  imw_new[32] = 0.4961667594819952;   // H2+
  imw_new[33] = 0.3307478312219284;   // H3+
  imw_new[34] = 0.0713956711808946;   // N+
  imw_new[35] = 0.0356971365293034;   // N2+
  imw_new[36] = 0.0237979356766708;   // N3+
  imw_new[37] = 0.0178483935044992;   // N4+
  imw_new[38] = 0.0666024999529374;   // NH+
  imw_new[39] = 0.0344572704350588;   // N2H+
  imw_new[40] = 0.0624124220308800;   // NH2+
  imw_new[41] = 0.0587183495805802;   // NH3+
  imw_new[42] = 0.0554371313097423;   // NH4+
}

//  inverse molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real imw(const int n) {
#if AMREX_DEVICE_COMPILE
  return global_imw[n];
#else
  return h_global_imw[n];
#endif
}
//  molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void get_mw(amrex::Real *mw_new) {
  mw_new[0] = 0.000549;   // E
  mw_new[1] = 1.008000;   // H
  mw_new[2] = 2.016000;   // H2
  mw_new[3] = 2.016000;   // H2v1
  mw_new[4] = 2.016000;   // H2v2
  mw_new[5] = 2.016000;   // H2v3
  mw_new[6] = 14.007000;  // N
  mw_new[7] = 28.014000;  // N2
  mw_new[8] = 28.014000;  // N2v1
  mw_new[9] = 28.014000;  // N2v2
  mw_new[10] = 28.014000; // N2v3
  mw_new[11] = 28.014000; // N2v4
  mw_new[12] = 28.014000; // N2v5
  mw_new[13] = 28.014000; // N2v6
  mw_new[14] = 28.014000; // N2v7
  mw_new[15] = 28.014000; // N2v8
  mw_new[16] = 28.014000; // N2A3
  mw_new[17] = 28.014000; // N2B3
  mw_new[18] = 28.014000; // N2a1
  mw_new[19] = 28.014000; // N2C3
  mw_new[20] = 2.016000;  // H2B3
  mw_new[21] = 2.016000;  // H2B1
  mw_new[22] = 2.016000;  // H2C3
  mw_new[23] = 2.016000;  // H2A3
  mw_new[24] = 2.016000;  // H2R
  mw_new[25] = 14.007000; // N2D
  mw_new[26] = 14.007000; // N2P
  mw_new[27] = 15.015000; // NH
  mw_new[28] = 16.023000; // NH2
  mw_new[29] = 17.031000; // NH3
  mw_new[30] = 1.008549;  // H-
  mw_new[31] = 1.007451;  // H+
  mw_new[32] = 2.015451;  // H2+
  mw_new[33] = 3.023451;  // H3+
  mw_new[34] = 14.006451; // N+
  mw_new[35] = 28.013451; // N2+
  mw_new[36] = 42.020451; // N3+
  mw_new[37] = 56.027451; // N4+
  mw_new[38] = 15.014451; // NH+
  mw_new[39] = 29.021451; // N2H+
  mw_new[40] = 16.022451; // NH2+
  mw_new[41] = 17.030451; // NH3+
  mw_new[42] = 18.038451; // NH4+
}

//  molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real mw(const int n) {
#if AMREX_DEVICE_COMPILE
  return global_mw[n];
#else
  return h_global_mw[n];
#endif
}

//  Returns R, Rc, Patm
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRP(amrex::Real &ru, amrex::Real &ruc, amrex::Real &pa) {
  ru = 8.31446261815324e+07;
  ruc = 1.98721558317399615845;
  pa = 1.01325e+06;
}

// compute the g/(RT) at the given temperature
// FIXME: NEED TO REVISIT H2VIB THERMO PROPS
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void gibbs(amrex::Real *species,
                                                    const amrex::Real T) {
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;
  const amrex::Real logT = log(T);

  // species with no change across T
  // species 0: E
  species[0] = -7.459784500000000e+02 * invT + 1.423710750000000e+01 -
               2.500251500000000e+00 * logT;
  // species 30: H-
  species[30] = +1.597616700000000e+04 * invT + 3.639013900000000e+00 -
                2.500000000000000e+00 * logT;
  // species 31: H+
  species[31] = +1.840214880000000e+05 * invT + 3.640646640000000e+00 -
                2.500000000000000e+00 * logT;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: H
    species[1] = +2.547365990000000e+04 * invT + 2.946682853000000e+00 -
                 2.500000000000000e+00 * logT - 3.526664095000000e-13 * T +
                 3.326532733333333e-16 * T2 - 1.917346933333333e-19 * T3 +
                 4.638661660000000e-23 * T4;
    // species 2: H2
    species[2] = -1.041251420000000e+03 * invT + 7.465055480000000e+00 -
                 3.440175910000000e+00 * logT - 3.066043020000000e-04 * T +
                 2.931715900000000e-07 * T2 - 1.776017825000000e-10 * T3 +
                 4.374271745000000e-14 * T4;
    // species 3: H2v1
    species[3] = +4.944629170000000e+03 * invT + 7.350715360000001e+00 -
                 3.428130420000000e+00 * logT - 3.575436445000000e-04 * T +
                 3.392883483333333e-07 * T2 - 2.047945975000000e-10 * T3 +
                 5.041168850000000e-14 * T4;
    // species 4: H2v2
    species[4] = +1.057808010000000e+04 * invT + 7.430712840000000e+00 -
                 3.455518510000000e+00 * logT - 2.391624710000000e-04 * T +
                 2.208965616666667e-07 * T2 - 1.355829283333333e-10 * T3 +
                 3.374623260000000e-14 * T4;
    // species 5: H2v3
    species[5] = +1.586043210000000e+04 * invT + 7.624768899999999e+00 -
                 3.506358580000000e+00 * logT - 2.041858630000000e-05 * T +
                 4.743417066666667e-09 * T2 - 9.121242750000000e-12 * T3 +
                 3.207416640000000e-15 * T4;
    // species 6: N
    species[6] = +5.610463800000000e+04 * invT - 1.693908800000000e+00 -
                 2.500000000000000e+00 * logT;
    // species 7: N2
    species[7] = -1.043751550000000e+03 * invT + 4.107889700000000e-01 -
                 3.500013410000000e+00 * logT - 1.988302010000000e-06 * T -
                 3.308225633333333e-11 * T2 + 9.952321416666666e-15 * T3 -
                 1.955500110000000e-18 * T4;
    // species 8: N2v1
    species[8] = +2.308485240000000e+03 * invT + 4.020452500000000e-01 -
                 3.500013180000000e+00 * logT - 2.024561375000000e-06 * T -
                 3.306546533333333e-11 * T2 + 9.781814583333332e-15 * T3 -
                 1.924008100000000e-18 * T4;
    // species 9: N2v2
    species[9] = +5.619474670000000e+03 * invT + 3.932245299999999e-01 -
                 3.500012970000000e+00 * logT - 2.061681680000000e-06 * T -
                 3.315211866666666e-11 * T2 + 9.661553166666666e-15 * T3 -
                 1.904693820000000e-18 * T4;
    // species 10: N2v3
    species[10] = +8.889197240000000e+03 * invT + 3.843254100000002e-01 -
                  3.500012780000000e+00 * logT - 2.099737650000000e-06 * T -
                  3.330362233333333e-11 * T2 + 9.568274833333334e-15 * T3 -
                  1.891922225000000e-18 * T4;
    // species 11: N2v4
    species[11] = +1.211763340000000e+04 * invT + 3.753465400000002e-01 -
                  3.500012610000000e+00 * logT - 2.138697940000000e-06 * T -
                  3.358611850000000e-11 * T2 + 9.540250333333334e-15 * T3 -
                  1.894972010000000e-18 * T4;
    // species 12: N2v5
    species[12] = +1.530476370000000e+04 * invT + 3.662865499999999e-01 -
                  3.500012490000000e+00 * logT - 2.178536715000000e-06 * T -
                  3.406192000000000e-11 * T2 + 9.613394583333334e-15 * T3 -
                  1.922537540000000e-18 * T4;
    // species 13: N2v6
    species[13] = +1.845056860000000e+04 * invT + 3.571440600000000e-01 -
                  3.500012430000000e+00 * logT - 2.219205085000000e-06 * T -
                  3.481744850000000e-11 * T2 + 9.837740166666667e-15 * T3 -
                  1.986735275000000e-18 * T4;
    // species 14: N2v7
    species[14] = +2.155502860000000e+04 * invT + 3.479176800000001e-01 -
                  3.500012460000000e+00 * logT - 2.260619290000000e-06 * T -
                  3.597485550000000e-11 * T2 + 1.028426483333333e-14 * T3 -
                  2.104758455000000e-18 * T4;
    // species 15: N2v8
    species[15] = +2.461812410000000e+04 * invT + 3.386067900000000e-01 -
                  3.500012770000000e+00 * logT - 2.302004600000000e-06 * T -
                  3.832837316666667e-11 * T2 + 1.141806266666667e-14 * T3 -
                  2.389157340000000e-18 * T4;
    // species 16: N2A3
    species[16] = +7.057910608000000e+04 * invT - 6.516950000000001e-01 -
                  3.298677000000000e+00 * logT - 7.041202000000000e-04 * T +
                  6.605369999999999e-07 * T2 - 4.701262500000001e-10 * T3 +
                  1.222427000000000e-13 * T4;
    // species 17: N2B3
    species[17] = +7.057910608000000e+04 * invT - 6.516950000000001e-01 -
                  3.298677000000000e+00 * logT - 7.041202000000000e-04 * T +
                  6.605369999999999e-07 * T2 - 4.701262500000001e-10 * T3 +
                  1.222427000000000e-13 * T4;
    // species 18: N2a1
    species[18] = +7.057910608000000e+04 * invT - 6.516950000000001e-01 -
                  3.298677000000000e+00 * logT - 7.041202000000000e-04 * T +
                  6.605369999999999e-07 * T2 - 4.701262500000001e-10 * T3 +
                  1.222427000000000e-13 * T4;
    // species 19: N2C3
    species[19] = +7.057910608000000e+04 * invT - 6.516950000000001e-01 -
                  3.298677000000000e+00 * logT - 7.041202000000000e-04 * T +
                  6.605369999999999e-07 * T2 - 4.701262500000001e-10 * T3 +
                  1.222427000000000e-13 * T4;
    // species 20: H2B3
    species[20] = -9.179351730000000e+02 * invT + 1.661320882000000e+00 -
                  2.344331120000000e+00 * logT - 3.990260375000000e-03 * T +
                  3.246358500000000e-06 * T2 - 1.679767450000000e-09 * T3 +
                  3.688058805000000e-13 * T4;
    // species 21: H2B1
    species[21] = -9.179351730000000e+02 * invT + 1.661320882000000e+00 -
                  2.344331120000000e+00 * logT - 3.990260375000000e-03 * T +
                  3.246358500000000e-06 * T2 - 1.679767450000000e-09 * T3 +
                  3.688058805000000e-13 * T4;
    // species 22: H2C3
    species[22] = -9.179351730000000e+02 * invT + 1.661320882000000e+00 -
                  2.344331120000000e+00 * logT - 3.990260375000000e-03 * T +
                  3.246358500000000e-06 * T2 - 1.679767450000000e-09 * T3 +
                  3.688058805000000e-13 * T4;
    // species 23: H2A3
    species[23] = -9.179351730000000e+02 * invT + 1.661320882000000e+00 -
                  2.344331120000000e+00 * logT - 3.990260375000000e-03 * T +
                  3.246358500000000e-06 * T2 - 1.679767450000000e-09 * T3 +
                  3.688058805000000e-13 * T4;
    // species 24: H2R
    species[24] = -9.179351730000000e+02 * invT + 1.661320882000000e+00 -
                  2.344331120000000e+00 * logT - 3.990260375000000e-03 * T +
                  3.246358500000000e-06 * T2 - 1.679767450000000e-09 * T3 +
                  3.688058805000000e-13 * T4;
    // species 25: N2D
    species[25] = +5.610463800000000e+04 * invT - 1.693908800000000e+00 -
                  2.500000000000000e+00 * logT;
    // species 26: N2P
    species[26] = +5.610463800000000e+04 * invT - 1.693908800000000e+00 -
                  2.500000000000000e+00 * logT;
    // species 27: NH
    species[27] = +4.210597220000000e+04 * invT + 1.644600640000000e+00 -
                  3.492950370000000e+00 * logT - 1.558978600000000e-04 * T +
                  2.481777133333333e-07 * T2 - 2.068061683333333e-10 * T3 +
                  5.178545800000000e-14 * T4;
    // species 28: NH2
    species[28] = +2.149913870000000e+04 * invT + 4.282458684400000e+00 -
                  4.191980160000000e+00 * logT + 1.023014135000000e-03 * T -
                  1.112926890000000e-06 * T2 + 4.374226958333334e-10 * T3 -
                  7.779497400000000e-14 * T4;
    // species 29: NH3
    species[29] = -6.707535140000000e+03 * invT + 5.805259439999999e+00 -
                  4.460751510000000e+00 * logT + 2.843908815000000e-03 * T -
                  3.523524733333333e-06 * T2 + 1.690416500000000e-09 * T3 -
                  3.447502775000000e-13 * T4;
    // species 32: H2+
    species[32] = +1.786946540000000e+05 * invT + 7.738652640000000e+00 -
                  3.772560720000000e+00 * logT + 9.787329500000001e-04 * T -
                  7.580200783333333e-07 * T2 + 2.351267841666667e-10 * T3 -
                  2.669846045000000e-14 * T4;
    // species 33: H3+
    species[33] = +1.326355370000000e+05 * invT + 1.001757080000000e+01 -
                  4.179569800000000e+00 * logT + 4.344378135000000e-04 * T +
                  1.816956183333333e-08 * T2 - 3.444581383333333e-10 * T3 +
                  1.189385135000000e-13 * T4;
    // species 34: N+
    species[34] = +2.255487310000000e+05 * invT - 8.014748799999998e-01 -
                  2.797813570000000e+00 * logT + 7.064358900000000e-04 * T -
                  4.478116633333333e-07 * T2 + 1.930129925000000e-10 * T3 -
                  3.747927890000000e-14 * T4;
    // species 35: N2+
    species[35] = +1.804811150000000e+05 * invT + 1.082185330000000e+00 -
                  3.775407110000000e+00 * logT + 1.032295785000000e-03 * T -
                  7.929205016666667e-07 * T2 + 2.630535233333333e-10 * T3 -
                  3.352549865000000e-14 * T4;
    // species 36: N3+
    species[36] = +1.818837650000000e+05 * invT - 2.745613200000001e-01 -
                  3.670116520000000e+00 * logT - 2.299032530000000e-03 * T -
                  2.318472716666667e-07 * T2 + 4.189124675000000e-10 * T3 -
                  1.105778800000000e-13 * T4;
    // species 37: N4+
    species[37] = +2.155531830000000e+05 * invT - 4.496941250000000e+00 -
                  3.325965150000000e+00 * logT - 7.195459050000000e-03 * T +
                  2.613287550000000e-06 * T2 - 7.935732066666667e-10 * T3 +
                  1.267833240000000e-13 * T4;
    // species 38: NH+
    species[38] = +1.990850430000000e+05 * invT + 7.543695959999999e+00 -
                  4.616111360000000e+00 * logT + 1.567178385000000e-03 * T -
                  4.861752166666667e-07 * T2 - 2.144873733333333e-11 * T3 +
                  3.657156735000000e-14 * T4;
    // species 39: N2H+
    species[39] = +1.890619250000000e+04 * invT - 4.929820300000003e-01 -
                  3.805870240000000e+00 * logT - 4.375067820000000e-03 * T +
                  2.482734616666667e-06 * T2 - 1.105896808333333e-09 * T3 +
                  2.267881830000000e-13 * T4;
    // species 40: NH2+
    species[40] = +1.515437640000000e+05 * invT + 4.497341048000000e+00 -
                  4.112188900000000e+00 * logT + 7.947088100000000e-04 * T -
                  9.535105966666667e-07 * T2 + 3.584290891666667e-10 * T3 -
                  5.922582350000000e-14 * T4;
    // species 41: NH3+
    species[41] = +1.122867830000000e+05 * invT + 8.187919600000000e-01 -
                  3.620553720000000e+00 * logT - 3.194264895000000e-04 * T -
                  1.381081826666667e-06 * T2 + 7.516286791666666e-10 * T3 -
                  1.601487270000000e-13 * T4;
    // species 42: NH4+
    species[42] = +7.539529170000000e+04 * invT + 9.227322680000000e+00 -
                  5.022094140000000e+00 * logT + 5.854953400000000e-03 * T -
                  6.626673566666666e-06 * T2 + 3.078501841666667e-09 * T3 -
                  6.013231350000000e-13 * T4;
  } else {
    // species 1: H
    species[1] = +2.547365990000000e+04 * invT + 2.946682924000000e+00 -
                 2.500000010000000e+00 * logT + 1.154214865000000e-11 * T -
                 2.692699133333334e-15 * T2 + 3.945960291666667e-19 * T3 -
                 2.490986785000000e-23 * T4;
    // species 2: H2
    species[2] = -1.115079080000000e+03 * invT + 8.910575520000000e+00 -
                 3.675475420000000e+00 * logT + 1.315265810000000e-04 * T -
                 2.726451850000000e-08 * T2 + 2.202053175000000e-12 * T3 -
                 5.686448600000000e-17 * T4;
    // species 3: H2v1
    species[3] = +4.844228010000000e+03 * invT + 9.337096370000001e+00 -
                 3.750403620000000e+00 * logT + 2.091643340000000e-04 * T -
                 4.595982316666667e-08 * T2 + 4.523985508333334e-12 * T3 -
                 1.621471435000000e-16 * T4;
    // species 4: H2v2
    species[4] = +1.048231840000000e+04 * invT + 9.328583220000001e+00 -
                 3.760741420000000e+00 * logT + 2.379616925000000e-04 * T -
                 5.792970600000000e-08 * T2 + 6.422228966666666e-12 * T3 -
                 2.602522785000000e-16 * T4;
    // species 5: H2v3
    species[5] = +1.578524160000000e+04 * invT + 9.113168360000000e+00 -
                 3.741104470000000e+00 * logT + 2.469244475000000e-04 * T -
                 6.798563349999999e-08 * T2 + 8.184921725000000e-12 * T3 -
                 3.545756535000000e-16 * T4;
    // species 6: N
    species[6] = +5.613377500000000e+04 * invT - 2.233666600000000e+00 -
                 2.415942900000000e+00 * logT - 8.744532500000000e-05 * T +
                 1.983728166666667e-08 * T2 - 2.518853666666667e-12 * T3 +
                 1.018049150000000e-16 * T4;
    // species 7: N2
    species[7] = -1.043749520000000e+03 * invT + 4.107179300000001e-01 -
                 3.500000630000000e+00 * logT - 2.022277475000000e-06 * T -
                 1.031461338333333e-11 * T2 - 8.933536916666666e-17 * T3 -
                 2.514376820000000e-21 * T4;
    // species 8: N2v1
    species[8] = +2.308487240000000e+03 * invT + 4.019754299999998e-01 -
                 3.500000620000000e+00 * logT - 2.057956165000000e-06 * T -
                 1.067997803333333e-11 * T2 - 9.435232083333334e-17 * T3 -
                 2.686242910000000e-21 * T4;
    // species 9: N2v2
    species[9] = +5.619476660000000e+03 * invT + 3.931555600000003e-01 -
                 3.500000570000000e+00 * logT - 2.094624655000000e-06 * T -
                 1.105436391666667e-11 * T2 - 1.005667933333333e-16 * T3 -
                 2.828671000000000e-21 * T4;
    // species 10: N2v3
    species[10] = +8.889199210000001e+03 * invT + 3.842570699999999e-01 -
                  3.500000500000000e+00 * logT - 2.132298420000000e-06 * T -
                  1.144238811666667e-11 * T2 - 1.075533325000000e-16 * T3 -
                  2.965438835000000e-21 * T4;
    // species 11: N2v4
    species[11] = +1.211763540000000e+04 * invT + 3.752783200000001e-01 -
                  3.500000370000000e+00 * logT - 2.171044440000000e-06 * T -
                  1.183875303333333e-11 * T2 - 1.160928725000000e-16 * T3 -
                  3.059963920000000e-21 * T4;
    // species 12: N2v5
    species[12] = +1.530476580000000e+04 * invT + 3.662176599999998e-01 -
                  3.500000150000000e+00 * logT - 2.210928560000000e-06 * T -
                  1.223878096666667e-11 * T2 - 1.269013500000000e-16 * T3 -
                  3.079108290000000e-21 * T4;
    // species 13: N2v6
    species[13] = +1.845057080000000e+04 * invT + 3.570732999999997e-01 -
                  3.499999800000000e+00 * logT - 2.252030805000000e-06 * T -
                  1.263531696666667e-11 * T2 - 1.410116550000000e-16 * T3 -
                  2.973684650000000e-21 * T4;
    // species 14: N2v7
    species[14] = +2.155503090000000e+04 * invT + 3.478432900000001e-01 -
                  3.499999250000000e+00 * logT - 2.294451180000000e-06 * T -
                  1.301757830000000e-11 * T2 - 1.599165625000000e-16 * T3 -
                  2.671102380000000e-21 * T4;
    // species 15: N2v8
    species[15] = +2.461812690000000e+04 * invT + 3.385232899999999e-01 -
                  3.499998080000000e+00 * logT - 2.338612395000000e-06 * T -
                  1.331030876666667e-11 * T2 - 1.929908800000000e-16 * T3 -
                  1.698017790000000e-21 * T4;
    // species 16: N2A3
    species[16] = +7.067710608000000e+04 * invT - 3.053888000000000e+00 -
                  2.926640000000000e+00 * logT - 7.439884000000000e-04 * T +
                  9.474600000000001e-08 * T2 - 8.414198333333333e-12 * T3 +
                  3.376675500000000e-16 * T4;
    // species 17: N2B3
    species[17] = +7.067710608000000e+04 * invT - 3.053888000000000e+00 -
                  2.926640000000000e+00 * logT - 7.439884000000000e-04 * T +
                  9.474600000000001e-08 * T2 - 8.414198333333333e-12 * T3 +
                  3.376675500000000e-16 * T4;
    // species 18: N2a1
    species[18] = +7.067710608000000e+04 * invT - 3.053888000000000e+00 -
                  2.926640000000000e+00 * logT - 7.439884000000000e-04 * T +
                  9.474600000000001e-08 * T2 - 8.414198333333333e-12 * T3 +
                  3.376675500000000e-16 * T4;
    // species 19: N2C3
    species[19] = +7.067710608000000e+04 * invT - 3.053888000000000e+00 -
                  2.926640000000000e+00 * logT - 7.439884000000000e-04 * T +
                  9.474600000000001e-08 * T2 - 8.414198333333333e-12 * T3 +
                  3.376675500000000e-16 * T4;
    // species 20: H2B3
    species[20] = -9.501589220000000e+02 * invT + 6.542302510000000e+00 -
                  3.337279200000000e+00 * logT + 2.470123655000000e-05 * T -
                  8.324279633333333e-08 * T2 + 1.496386616666667e-11 * T3 -
                  1.001276880000000e-15 * T4;
    // species 21: H2B1
    species[21] = -9.501589220000000e+02 * invT + 6.542302510000000e+00 -
                  3.337279200000000e+00 * logT + 2.470123655000000e-05 * T -
                  8.324279633333333e-08 * T2 + 1.496386616666667e-11 * T3 -
                  1.001276880000000e-15 * T4;
    // species 22: H2C3
    species[22] = -9.501589220000000e+02 * invT + 6.542302510000000e+00 -
                  3.337279200000000e+00 * logT + 2.470123655000000e-05 * T -
                  8.324279633333333e-08 * T2 + 1.496386616666667e-11 * T3 -
                  1.001276880000000e-15 * T4;
    // species 23: H2A3
    species[23] = -9.501589220000000e+02 * invT + 6.542302510000000e+00 -
                  3.337279200000000e+00 * logT + 2.470123655000000e-05 * T -
                  8.324279633333333e-08 * T2 + 1.496386616666667e-11 * T3 -
                  1.001276880000000e-15 * T4;
    // species 24: H2R
    species[24] = -9.501589220000000e+02 * invT + 6.542302510000000e+00 -
                  3.337279200000000e+00 * logT + 2.470123655000000e-05 * T -
                  8.324279633333333e-08 * T2 + 1.496386616666667e-11 * T3 -
                  1.001276880000000e-15 * T4;
    // species 25: N2D
    species[25] = +5.613377500000000e+04 * invT - 2.233666600000000e+00 -
                  2.415942900000000e+00 * logT - 8.744532500000000e-05 * T +
                  1.983728166666667e-08 * T2 - 2.518853666666667e-12 * T3 +
                  1.018049150000000e-16 * T4;
    // species 26: N2P
    species[26] = +5.613377500000000e+04 * invT - 2.233666600000000e+00 -
                  2.415942900000000e+00 * logT - 8.744532500000000e-05 * T +
                  1.983728166666667e-08 * T2 - 2.518853666666667e-12 * T3 +
                  1.018049150000000e-16 * T4;
    // species 27: NH
    species[27] = +4.234619450000000e+04 * invT - 2.957122190000000e+00 -
                  2.783726440000000e+00 * logT - 6.649294400000000e-04 * T +
                  7.079759550000000e-08 * T2 - 6.529120350000000e-12 * T3 +
                  2.752256550000000e-16 * T4;
    // species 28: NH2
    species[28] = +2.188654210000000e+04 * invT - 5.313023019999999e+00 -
                  2.592630490000000e+00 * logT - 1.738417985000000e-03 * T +
                  1.804527066666667e-07 * T2 - 1.244521316666667e-11 * T3 +
                  2.876205935000000e-16 * T4;
    // species 29: NH3
    species[29] = -6.309454360000000e+03 * invT - 7.500074070000000e+00 -
                  2.095666740000000e+00 * logT - 3.073750225000000e-03 * T +
                  3.338815416666667e-07 * T2 - 2.511121883333333e-11 * T3 +
                  8.561360200000000e-16 * T4;
    // species 32: H2+
    species[32] = +1.786502360000000e+05 * invT + 6.237038200000001e+00 -
                  3.442047650000000e+00 * logT - 2.995416195000000e-04 * T -
                  1.115222808333333e-08 * T2 + 2.863119775000000e-12 * T3 -
                  9.881329950000000e-17 * T4;
    // species 33: H3+
    species[33] = +1.332305070000000e+05 * invT - 3.447332490000000e+00 -
                  2.014357180000000e+00 * logT - 2.079628845000000e-03 * T +
                  2.377747950000000e-07 * T2 - 1.853106158333333e-11 * T3 +
                  6.467325900000000e-16 * T4;
    // species 34: N+
    species[34] = +2.255970040000000e+05 * invT - 2.410255890000000e+00 -
                  2.512107040000000e+00 * logT - 8.768372000000000e-07 * T +
                  2.509292300000000e-09 * T2 - 5.890284908333333e-13 * T3 +
                  3.159305830000000e-17 * T4;
    // species 35: N2+
    species[35] = +1.803909940000000e+05 * invT + 4.907721999999999e-01 -
                  3.586613630000000e+00 * logT - 1.265359745000000e-04 * T -
                  3.079636900000000e-08 * T2 + 3.793810191666666e-12 * T3 -
                  1.634090145000000e-16 * T4;
    // species 36: N3+
    species[36] = +1.812400030000000e+05 * invT + 1.155185168000000e+01 -
                  5.481995770000000e+00 * logT - 1.008325880000000e-03 * T +
                  1.297097393333333e-07 * T2 - 1.096810941666667e-11 * T3 +
                  4.066602470000000e-16 * T4;
    // species 37: N4+
    species[37] = +2.145405450000000e+05 * invT + 1.829579346000000e+01 -
                  7.052858160000000e+00 * logT - 1.455472345000000e-03 * T +
                  1.859566650000000e-07 * T2 - 1.565699533333333e-11 * T3 +
                  5.788450650000000e-16 * T4;
    // species 38: NH+
    species[38] = +1.995245050000000e+05 * invT - 2.640590410000000e+00 -
                  2.959189800000000e+00 * logT - 6.749585950000000e-04 * T +
                  7.691463033333333e-08 * T2 - 6.891480550000001e-12 * T3 +
                  2.778794565000000e-16 * T4;
    // species 39: N2H+
    species[39] = +1.860663090000000e+04 * invT + 8.096511200000000e+00 -
                  5.305410370000000e+00 * logT - 7.931655350000000e-04 * T +
                  9.803142366666666e-08 * T2 - 8.077308325000001e-12 * T3 +
                  2.942194055000000e-16 * T4;
    // species 40: NH2+
    species[40] = +1.518843350000000e+05 * invT - 4.145216230000001e+00 -
                  2.667155720000000e+00 * logT - 1.713979225000000e-03 * T +
                  1.881962766666667e-07 * T2 - 1.425237541666667e-11 * T3 +
                  4.881373470000000e-16 * T4;
    // species 41: NH3+
    species[41] = +1.124700810000000e+05 * invT - 5.019800210000000e+00 -
                  2.588552130000000e+00 * logT - 2.870818405000000e-03 * T +
                  3.107868700000000e-07 * T2 - 2.330998050000000e-11 * T3 +
                  7.929718749999999e-16 * T4;
    // species 42: NH4+
    species[42] = +7.582002069999999e+04 * invT - 1.077739328000000e+01 -
                  1.315703320000000e+00 * logT - 4.824633275000000e-03 * T +
                  5.484160200000000e-07 * T2 - 4.267045483333333e-11 * T3 +
                  1.492495605000000e-15 * T4;
  }
}

// get molecular weight for all species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKWT(amrex::Real wt[]) {
  get_mw(wt);
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void comp_ener_exch(amrex::Real qf, amrex::Real qr, const amrex::Real * sc, amrex::Real kf, int rxntype, amrex::Real eexci, int elidx, amrex::Real * enerExch, amrex::Real Ue, amrex::Real T, const amrex::Real Te)
{
  // (0)='no electron'
  // (1)='excitation/de-excitation'
  // (2)='ionization'
  // (3)='recombination'
  // (4)='attachment'
  // (5)='elastic exchange'
  // (6)='chemi-ioniz'
  // (7)='detachment'

  amrex::Real eV2J = 1.602176620800000e-19;   // eV -> J
  amrex::Real NA = 6.02214085774e23;          // 1/mol
  amrex::Real kB = 1.380649e-23;              // J/K
  amrex::Real ne = sc[E_ID] * NA;             // 1/m3
  amrex::Real mee = Ue / ne;                  // J

  // Molecular weight used to calculate elastic collision energy exchange
  amrex::Real wt[NUM_SPECIES];
  get_mw(wt);

  // Superelastic factor (keeps Te from dropping below gas temperarture)
  amrex::Real sefact = (tanh((Te - T) / 0.5) + 1.0) / 2.0 ;

  // *enerExch = 0.0;
  if(rxntype == 1 || rxntype == 2){
    *enerExch -= (eexci*eV2J)*NA*(qf - qr) * sefact;
  }
  if(rxntype == 3){
    *enerExch -= mee*NA*(qf - qr);
  }
  if(rxntype == 4){
    *enerExch -= mee*NA*(qf - qr);
  }
  if(rxntype == 5){
    amrex::Real qq = sc[E_ID] * sc[elidx] * kf;
    *enerExch -= 3.0 * kB * (wt[E_ID] / wt[elidx]) * (Te - T) * qq * NA;
  }
  if(rxntype == 7){
    *enerExch += mee*NA*(qf - qr);
  }

  return;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
specMob(const int specid, const amrex::Real Te, const amrex::Real ndens,
        const amrex::Real emag, const amrex::Real T) {

    amrex::Real Arp_cs = 120e-20; //A^2 (cross section)
    amrex::Real E_cs = 40e-20; //A^2 (cross section)
    amrex::Real nu_elec = std::sqrt(8.0*K_B*Te/PI/ME)*ndens*E_cs;
    amrex::Real elecmob = -ECHARGE/ME/nu_elec;

    amrex::Real mob=0.0;
    if(specid==E_ID)
    {
        mob=elecmob;
    }
    if(specid==H2p_ID || specid==N2p_ID)
    {
        amrex::Real nu_Arp=std::sqrt(8.0*K_B*T/PI/(39.948*M_AMU))*ndens*Arp_cs;
        mob=ECHARGE/(39.948*M_AMU)/nu_Arp;
    }
    if(specid==NUM_SPECIES)
    {
        mob=fivebythree*elecmob;
    }

    return(mob);
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
specDiff(const int specid, const amrex::Real Te, const amrex::Real ndens,
         const amrex::Real emag, const amrex::Real T) {
  amrex::Real diff = 0.0;
  return (diff);
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate(amrex::Real *wdot, const amrex::Real *sc, const amrex::Real T,
               const amrex::Real Te, amrex::Real EN, amrex::Real *enerExch) {

  amrex::Real tc[5] = {log(T), T, T * T, T * T * T,
                             T * T * T * T}; // temperature cache
  const amrex::Real invT = 1.0 / T;
  const amrex::Real logT = log(T/300.0);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 43; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  // NOTE: manually changing to only loop over gas species
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 43; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[43];
  gibbs(g_RT, T);

  // Precalculating values for electron energy exchange evaluation
  amrex::Real ne = sc[E_ID] * 6.02214085774e23;
  amrex::Real Ue = 1.5 * Te * ne * 1.380649e-23;

  // NOTE: units of JANEV fits for electron impact rxns are cm3/s and must be convered to m3/mol-s
  // Precalculating values
  double Janev_sum;
  double invTe =  (Te == 0) ? 1.0 : 1.0/Te;
  double TeeV = Te / 11595.0;
  double logTe = log(TeeV);     // Fits are performed assuming Te is eV rather than K
  double invTeeV = (Te == 0) ? 1.0:1.0 / (TeeV);
  double Te_pow[] = {pow(logTe, 0), pow(logTe, 1), pow(logTe, 2), pow(logTe, 3), pow(logTe, 4), pow(logTe, 5), pow(logTe, 6), pow(logTe, 7), pow(logTe, 8)};
  double invTe_pow[] = {pow(invTeeV, 1), pow(invTeeV, 2), pow(invTeeV, 3), pow(invTeeV, 4)};

  tc[0] = log(T/300.0);   // temperature factors use (T/300)^beta
  std::vector<double> Jfit_coefs = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
  std::vector<double> Ffit_coefs = {0.0, 0.0, 0.0, 0.0};
  amrex::Real kB = 1.380649e-23;              // J/K
  amrex::Real ndens = mixture * N_A;
  amrex::Real emag = EN * 1.0e-21 * ndens;

  // Atomic masses (kg) for calculating Teff
  const amrex::Real N_m = mw(N_ID) / N_A * 1.0e-3;
  const amrex::Real N2_m = mw(N2_ID) / N_A * 1.0e-3;
  const amrex::Real N2p_m = mw(N2p_ID) / N_A * 1.0e-3;
  const amrex::Real N4p_m = mw(N4p_ID) / N_A * 1.0e-3;

  {
    // reaction 13:  N2 + E => E + N2+ + E
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-18.0928629862093, 26.5544185065312, -53.7090804588115, 73.6217857390477, -55.4989970720488, 23.9439070314149, -5.94741847138672, 0.793437441863614, -0.0441056067756059};
    double Jfit_A = 8.30300000000000e-14;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[7] -= qdot;
    wdot[35] += qdot;
    int rxntype = 2;
    amrex::Real eexci = 15.60;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 23:  H2 + E => E + H2+ + E
    amrex::Real k_f = 0;
    Jfit_coefs = {-15.0934358336260, 14.6155516119592, -24.0255958831980, 35.4190164703365, -27.6541960210444, 11.9095505312390, -2.89120686774962, 0.372266357004918, -0.0198123142320584};
    double Jfit_A = 3.38400000000000e-14;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[32] += qdot;
    int rxntype = 2;
    amrex::Real eexci = 15.40;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 24:  N + E => E + N+ + E
    amrex::Real k_f = 0;
    Jfit_coefs = {-14.7489869623673, 13.5568217952749, -21.8628741421967, 31.8104082143535, -24.5175896022571, 10.4422538489229, -2.50946320393878, 0.319898058458260, -0.0168494931856215};
    double Jfit_A = 4.37900000000000e-14;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[6] -= qdot;
    wdot[34] += qdot;
    int rxntype = 2;
    amrex::Real eexci = 14.55;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 25:  H + E => E + H+ + E
    const amrex::Real k_f = 1.0e-6 * 6.5e-9*pow(TeeV, 0.49)*exp(-12.89/TeeV) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[1]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[31] += qdot;
    int rxntype = 2;
    amrex::Real eexci = 13.60;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 26:  NH + E => E + NH+ + E
    const amrex::Real k_f = 1.0e-6*(1.38e-10*TeeV - 1.85e-10*pow(TeeV,2.0) + 6.65e-11*pow(TeeV, 3.0) - 4.36e-12*pow(TeeV, 4.0) + 3.02e-14*pow(TeeV, 5.0)) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[27] -= qdot;
    wdot[38] += qdot;
    int rxntype = 2;
    amrex::Real eexci = 13.50;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 27:  NH2 + E => E + NH2+ + E
    const amrex::Real k_f = 1.0e-6*(1.76e-10*TeeV - 2.70e-10*pow(TeeV, 2.0) + 1.17e-10*pow(TeeV, 3.0) - 1.24e-11*pow(TeeV, 4.0) + 4.23e-13*pow(TeeV, 5.0)) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[28] -= qdot;
    wdot[40] += qdot;
    int rxntype = 2;
    amrex::Real eexci = 12.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 28:  NH3 + E => E + NH3+ + E
    const amrex::Real k_f = 1.0e-6*(1.53e-10*TeeV - 2.24e-10*pow(TeeV, 2.0) + 9.37e-11*pow(TeeV, 3.0) - 9.97e-12*pow(TeeV, 4.0) + 3.33e-13*pow(TeeV, 5.0)) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[29] -= qdot;
    wdot[41] += qdot;
    int rxntype = 2;
    amrex::Real eexci = 10.2;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 29:  N2 + E => 2 N + E
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-13.3867015449706, 16.0370329091889, -30.1945364862381, 42.6339896282463, -32.4926199251579, 13.9593547947943, -3.42568338199355, 0.449684242893763, -0.0245438719860641};
    double Jfit_A = 6.10800000000000e-14;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += 2.000000 * qdot;
    wdot[7] -= qdot;
    int rxntype = 1;
    amrex::Real eexci = 13.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 30:  H2 + E => 2 H + E
    const amrex::Real k_f = 1.0e-6 * 1.75e-7 * pow(TeeV, -1.24)*exp(-12.59/TeeV) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[2] -= qdot;
    int rxntype = 1;
    amrex::Real eexci = 14.68;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 31:  NH + E => H + N + E
    const amrex::Real k_f = 1.0e-6 * 5.0e-8*pow(TeeV, 0.5) * exp(-8.6/TeeV) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[6] += qdot;
    wdot[27] -= qdot;
    int rxntype = 1;
    // FIXME: find exci energy
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 32:  NH2 + E => H2 + N + E
    const amrex::Real k_f = 1.0e-6 * 5.0e-8 * pow(TeeV, 0.5)*exp(-7.6/TeeV) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[6] += qdot;
    wdot[28] -= qdot;
    int rxntype = 1;
    // FIXME: find exci energy
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 33:  NH2 + E => H + NH + E
    const amrex::Real k_f = 1.0e-6 * 5.0e-8 * pow(TeeV, 0.5)*exp(-7.6/TeeV) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[27] += qdot;
    wdot[28] -= qdot;
    int rxntype = 1;
    // FIXME: find exci energy
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // NOTE: exci energy from https://doi.org/10.1063/1.462661
    // reaction 34:  NH3 + E => H + NH2 + E
    const amrex::Real k_f = 1.0e-6 * 5.0e-8 * pow(TeeV, 0.5)*exp(-4.4/TeeV) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
    int rxntype = 1;
    amrex::Real eexci = 6.1;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // NOTE: exci energy from https://doi.org/10.1063/1.462661
    // reaction 35:  NH3 + E => H2 + NH + E
    const amrex::Real k_f = 1.0e-6 * 5.0e-8 * pow(TeeV, 0.5)*exp(-5.5/TeeV) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[27] += qdot;
    wdot[29] -= qdot;
    int rxntype = 1;
    amrex::Real eexci = 9.3;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 186:  N + N2+ + N2 => N3+ + N2
    const amrex::Real mu_N2p = specMob(N2p_ID, Te, ndens, emag, tc[1]);
    const amrex::Real v_ion_sq = pow(emag*mu_N2p, 2);
    const amrex::Real Teff = tc[1] + PI/(6.0*kB) * (N_m*N2p_m / (N_m + N2p_m)) * v_ion_sq;
    const amrex::Real k_f = 3263956.1399928 * exp(400.0 / Teff);
    const amrex::Real qf = k_f * (sc[6] * sc[7] * sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[35] -= qdot;
    wdot[36] += qdot;
  }

  {
    // reaction 187:  N2 + N2+ + N2 => N4+ + N2
    const amrex::Real mu_N2p = specMob(N2p_ID, Te, ndens, emag, tc[1]);
    const amrex::Real v_ion_sq = pow(emag*mu_N2p, 2);
    const amrex::Real Teff = tc[1] + PI/(6.0*kB) * (N2_m*N2p_m / (N2_m + N2p_m)) * v_ion_sq;
    const amrex::Real k_f = 18858413.2532918 * pow(300.0/Teff, 2.2);
    const amrex::Real qf = k_f * ((sc[7] * sc[7]) * sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[35] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 191:  N4+ + N2 => N2 + N2+ + N2
    const amrex::Real mu_N4p = specMob(N4p_ID, Te, ndens, emag, tc[1]);
    const amrex::Real v_ion_sq = pow(emag*mu_N4p, 2);
    const amrex::Real Teff = tc[1] + PI/(6.0*kB) * (N2_m*N4p_m / (N2_m + N4p_m)) * v_ion_sq;
    const amrex::Real k_f = (Teff < 1.7e3) ? 126.46495596*exp(Teff/121.0) : 301100000;
    const amrex::Real qf = k_f * (sc[7] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[35] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 255:  2 N + N2 => N2A3 + N2
    const amrex::Real k_f = 1.59571189066315;
    const amrex::Real qf = k_f * ((sc[6] * sc[6]) * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= 2.000000 * qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 256:  2 N + H2 => N2A3 + H2
    const amrex::Real k_f = 1.59571189066315;
    const amrex::Real qf = k_f * (sc[2] * (sc[6] * sc[6]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= 2.000000 * qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 257:  2 N + N => N2A3 + N
    const amrex::Real k_f = 9.42920662664588;
    const amrex::Real qf = k_f * (sc[6] * sc[6] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= 2.000000 * qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 258:  2 N + H => N2A3 + H
    const amrex::Real k_f = 9.42920662664588;
    const amrex::Real qf = k_f * (sc[1] * (sc[6] * sc[6]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= 2.000000 * qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 259:  2 N + N2 => N2B3 + N2
    const amrex::Real k_f = 2.24850311866171;
    const amrex::Real qf = k_f * ((sc[6] * sc[6]) * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= 2.000000 * qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 260:  2 N + H2 => N2B3 + H2
    const amrex::Real k_f = 2.24850311866171;
    const amrex::Real qf = k_f * (sc[2] * (sc[6] * sc[6]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= 2.000000 * qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 261:  2 N + N => N2B3 + N
    const amrex::Real k_f = 13.0558245599712;
    const amrex::Real qf = k_f * (sc[6] * sc[6] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= 2.000000 * qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 262:  2 N + H => N2B3 + H
    const amrex::Real k_f = 13.0558245599712;
    const amrex::Real qf = k_f * (sc[1] * (sc[6] * sc[6]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= 2.000000 * qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 263:  2 N + N2 => N2 + N2
    const amrex::Real k_f = 0.870388303998081 * exp(500.0 / tc[1]);
    const amrex::Real qf = k_f * ((sc[6] * sc[6]) * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 264:  2 N + H2 => N2 + H2
    const amrex::Real k_f = 0.870388303998081 * exp(500.0 / tc[1]);
    const amrex::Real qf = k_f * (sc[2] * (sc[6] * sc[6]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 265:  2 H + H2 => H2 + H2
    const amrex::Real k_f = 8.34122124664828 * pow(300.0 / tc[1], 0.6);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= 2.000000 * qdot;
    wdot[2] += qdot;
  }

  {
    // reaction 266:  2 H + N2 => H2 + N2
    const amrex::Real k_f = 7.97855945331574 * pow(300.0 / tc[1], 0.6);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= 2.000000 * qdot;
    wdot[2] += qdot;
  }

  {
    // reaction 267:  H + N + N2 => NH + N2
    const amrex::Real k_f = 0.942920662664588;
    const amrex::Real qf = k_f * (sc[1] * sc[6] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[6] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 268:  H + N + H2 => NH + H2
    const amrex::Real k_f = 0.942920662664588;
    const amrex::Real qf = k_f * (sc[1] * sc[2] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[6] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 269:  H2 + N + N2 => NH2 + N2
    const amrex::Real k_f = 0.0942920662664588;
    const amrex::Real qf = k_f * (sc[2] * sc[6] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 270:  H2 + N + H2 => NH2 + H2
    const amrex::Real k_f = 0.0942920662664588;
    const amrex::Real qf = k_f * ((sc[2] * sc[2]) * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 271:  H + NH + N2 => NH2 + N2
    const amrex::Real k_f = 9.42920662664588;
    const amrex::Real qf = k_f * (sc[1] * sc[7] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[27] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 272:  H + NH + H2 => NH2 + H2
    const amrex::Real k_f = 9.42920662664588;
    const amrex::Real qf = k_f * (sc[1] * sc[2] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[27] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 273:  H + NH2 + N2 => NH3 + N2
    const amrex::Real k_f = 5077.26510665547;
    const amrex::Real qf = k_f * (sc[1] * sc[7] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[28] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 274:  H + NH2 + H2 => NH3 + H2
    const amrex::Real k_f = 5077.26510665547;
    const amrex::Real qf = k_f * (sc[1] * sc[2] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[28] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 275:  H2 + NH + N2 => NH3 + N2
    const amrex::Real k_f = 0.0235730165666147 * (tc[1] / 300.0) * exp(1700.0 / tc[1]);
    const amrex::Real qf = k_f * (sc[2] * sc[7] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[27] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 276:  H2 + NH + H2 => NH3 + H2
    const amrex::Real k_f = 0.0235730165666147 * (tc[1] / 300.0) * exp(1700.0 / tc[1]);
    const amrex::Real qf = k_f * ((sc[2] * sc[2]) * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[27] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 283:  H- + H2+ + N2 => H + H2 + N2
    const amrex::Real k_f = 181330896.666267 * pow(300.0 / tc[1], 2.5);
    const amrex::Real qf = k_f * (sc[7] * sc[30] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] += qdot;
    wdot[30] -= qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 284:  H- + H2+ + H2 => H + H2 + H2
    const amrex::Real k_f = 181330896.666267 * pow(300.0 / tc[1], 2.5);
    const amrex::Real qf = k_f * (sc[2] * sc[30] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] += qdot;
    wdot[30] -= qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 285:  H- + H3+ + N2 => 2 H2 + N2
    const amrex::Real k_f = 181330896.666267 * pow(300.0 / tc[1], 2.5);
    const amrex::Real qf = k_f * (sc[7] * sc[30] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += 2.000000 * qdot;
    wdot[30] -= qdot;
    wdot[33] -= qdot;
  }

  {
    // reaction 286:  H- + H3+ + H2 => 2 H2 + H2
    const amrex::Real k_f = 181330896.666267 * pow(300.0 / tc[1], 2.5);
    const amrex::Real qf = k_f * (sc[2] * sc[30] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += 2.000000 * qdot;
    wdot[30] -= qdot;
    wdot[33] -= qdot;
  }

  {
    // reaction 287:  H- + N2+ + N2 => H + N2 + N2
    const amrex::Real k_f = 181330896.666267 * pow(300.0 / tc[1], 2.5);
    const amrex::Real qf = k_f * (sc[7] * sc[30] * sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[7] += qdot;
    wdot[30] -= qdot;
    wdot[35] -= qdot;
  }

  {
    // reaction 288:  H- + N2+ + H2 => H + N2 + H2
    const amrex::Real k_f = 181330896.666267 * pow(300.0 / tc[1], 2.5);
    const amrex::Real qf = k_f * (sc[2] * sc[30] * sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[7] += qdot;
    wdot[30] -= qdot;
    wdot[35] -= qdot;
  }

  {
    // reaction 289:  H- + N4+ + N2 => H + 2 N2 + N2
    const amrex::Real k_f = 181330896.666267 * pow(300.0 / tc[1], 2.5);
    const amrex::Real qf = k_f * (sc[7] * sc[30] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[7] += 2.000000 * qdot;
    wdot[30] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 290:  H- + N4+ + H2 => H + 2 N2 + H2
    const amrex::Real k_f = 181330896.666267 * pow(300.0 / tc[1], 2.5);
    const amrex::Real qf = k_f * (sc[2] * sc[30] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[7] += 2.000000 * qdot;
    wdot[30] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 291:  H- + N2H+ + N2 => H2 + N2 + N2
    const amrex::Real k_f = 181330896.666267 * pow(300.0 / tc[1], 2.5);
    const amrex::Real qf = k_f * (sc[7] * sc[30] * sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[7] += qdot;
    wdot[30] -= qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 292:  H- + N2H+ + H2 => H2 + N2 + H2
    const amrex::Real k_f = 181330896.666267 * pow(300.0 / tc[1], 2.5);
    const amrex::Real qf = k_f * (sc[2] * sc[30] * sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[7] += qdot;
    wdot[30] -= qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 0:  E + N2 => E + N2
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-1.16902522362483, 0.738822262047224, -0.339049943235264, -0.0609355573593132, 0.143049643740342, -0.0213530778226685, -0.0198491808630340, 0.00759921953453250, -0.000770424810916458};
    double Jfit_A = 3.11800000000000e-13;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[7] -= qdot;
    wdot[7] += qdot;
    int rxntype = 5;
    amrex::Real eexci = 0.0;
    int elidx = N2_ID;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 1:  E + N2 => E + N2v1
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-1.51464091502398, 0.641360558897446, -0.861100738187206, 0.696580476943310, 0.151139719110089, -0.190835876597610, 0.00154434374272550, 0.0176855975007659, -0.00263301478923979};
    double Jfit_A = 8.04700000000000e-16;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[7] -= qdot;
    wdot[8] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 0.29;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }
//   {
//     // reaction 1:  E + N2 => E + N2v1
//     Janev_sum = 0.0;
//     amrex::Real k_f = 0;
//     Ffit_coefs = {13.2124912636959, -18.1986395013209, 9.35896210262433 -1.77832377067895};
//     double Ffit_A = 3.05146889432627e-16;
//     for(int j = 0; j<4; j++) Janev_sum += Ffit_coefs[j] * invTe_pow[j];
//     k_f = Ffit_A * exp(Janev_sum) * 6.02214085774e23;
//     const amrex::Real qf = k_f * (sc[0] * sc[7]);
//     const amrex::Real qr = 0.0;
//     const amrex::Real qdot = qf - qr;
//     wdot[0] -= qdot;
//     wdot[0] += qdot;
//     wdot[7] -= qdot;
//     wdot[8] += qdot;
//     int rxntype = 1;
//     amrex::Real eexci = 0.29;
//     int elidx = 0;
//     comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
//   }

  {
    // reaction 2:  E + N2 => E + N2v2
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Ffit_coefs = {13.8206575381419, -19.8365705517498, 10.7396996098913, -2.15771736848714};
    double Ffit_A = 1.72496403241219e-16;
    for(int j = 0; j<4; j++) Janev_sum += Ffit_coefs[j] * invTe_pow[j];
    k_f = Ffit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[7] -= qdot;
    wdot[9] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 0.59;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 3:  E + N2 => E + N2v3
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Ffit_coefs = {14.5040647241326, -21.7157286139305, 12.4386514861032, -2.64168262730011};
    double Ffit_A = 1.10182038869423e-16;
    for(int j = 0; j<4; j++) Janev_sum += Ffit_coefs[j] * invTe_pow[j];
    k_f = Ffit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[7] -= qdot;
    wdot[10] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 0.88;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 4:  E + N2 => E + N2v4
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-0.281965452322370, 1.25985546599951, -2.59169279044685, 3.50064769279032, -3.20264334784815, 1.63023381255990, -0.457323067481955, 0.0665728695192607, -0.00393366415465964};
    double Jfit_A = 1.31600000000000e-15;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[7] -= qdot;
    wdot[11] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 1.17;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 5:  E + N2 => E + N2v5
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-0.351265955295612, 1.33717461601569, -2.63446260095570, 3.89433902763079, -3.87755232971503, 2.11755957782965, -0.633772877859835, 0.0982291885518485, -0.00617564320058298};
    double Jfit_A = 1.06300000000000e-15;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[7] -= qdot;
    wdot[12] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 1.47;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 6:  E + N2 => E + N2v6
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-0.464392366329764, 1.46057677819985, -2.93024915783973, 5.20597689992578, -5.77433685582049, 3.39052526372595, -1.07548714102553, 0.175225376633974, -0.0115141014689314};
    double Jfit_A = 8.62200000000000e-16;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[7] -= qdot;
    wdot[13] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 1.76;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 7:  E + N2 => E + N2v7
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-0.594080033090776, 1.67772473108648, -3.29923250747629, 6.09284097573958, -6.81345644522830, 4.01339728514646, -1.27615043475661, 0.208379748530440, -0.0137212603608495};
    double Jfit_A = 4.46700000000000e-16;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[7] -= qdot;
    wdot[14] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 2.06;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 8:  E + N2 => E + N2v8
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-0.719853580526915, 1.90785338456873, -3.72687306898017, 6.98163585156526, -7.77160470218346, 4.55983305606805, -1.44622124685776, 0.235755011887727, -0.0155060493119078};
    double Jfit_A = 2.04800000000000e-16;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[7] -= qdot;
    wdot[15] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 2.35;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 9a:  E + N2 => E + N2A3
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-5.14476118537398, 5.49996773619354, -10.3907462975157, 20.0701875385646, -20.0459772714449, 10.8587380188808, -3.27450130382642, 0.517279105928953, -0.0333635768173078};
    double Jfit_A = 1.70600000000000e-16;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[7] -= qdot;
    wdot[16] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 6.17;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }
  {
    // reaction 9b:  E + N2 => E + N2A3
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-5.40019830475352, 5.85972941177938, -10.5669752777753, 19.3600194434585, -18.6541804947720, 9.82930389344324 , -2.90024154996000, 0.450343932148620, -0.0286523897962269};
    double Jfit_A = 7.28800000000000e-16;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[7] -= qdot;
    wdot[16] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 7.00;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 10:  E + N2 => E + N2B3
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-4.92139871786941, 5.62842796491013, -10.6925633205785, 20.9115527754850, -21.2562250148100, 11.6649384135652, -3.54749392684541, 0.563339241900538, -0.0364470707270905};
    double Jfit_A = 1.92800000000000e-15;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[7] -= qdot;
    wdot[17] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 7.35;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 11:  E + N2 => E + N2a1
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-5.86368621750435, 6.28279831351158, -11.0691178225551, 20.5989585250882, -19.9977503558708, 10.5253809119225, -3.08895371906611, 0.476478471631771, -0.0301188195834067};
    double Jfit_A = 5.47400000000000e-16;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[7] -= qdot;
    wdot[18] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 8.4;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 12:  E + N2 => E + N2C3
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-7.49066846950079, 8.18704866383299, -12.1004693395359, 19.8074102343013, -17.5931400906781, 8.54579125551176, -2.32984081987772, 0.336172286620891, -0.0200186848011630};
    double Jfit_A = 5.11300000000000e-15;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[7] -= qdot;
    wdot[19] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 11.03;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 14:  E + H2 => E + H2
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-0.195046171489916, 0.363494237185053, -0.194368663342493, 0.00360543724371368, 0.0132090367453146, -0.00203864549758229, -0.000187114596736366, 0.000156927301372594, -2.39198414188756e-05};
    double Jfit_A = 1.36300000000000e-13;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[2] += qdot;
    int rxntype = 5;
    amrex::Real eexci = 0.0;
    int elidx = H2_ID;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 15:  E + H2 => E + H2v1
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-0.714316367883707, 1.38885188323777, -0.896682059878988, 0.205691155420593, -0.00126119079861499, -0.0175689637140865, 0.000166269542345062, 0.00200527749681444, -0.000311801565498550};
    double Jfit_A = 3.08600000000000e-15;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 0.52;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 16:  E + H2 => E + H2v2
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-1.37864601209690, 2.63046538866803, -1.83776941997664, 0.549377188986794, -0.106802078818864, 0.0965961309765532, -0.0731567659573803, 0.0210105098161069, -0.00203785023617388};
    double Jfit_A = 2.66000000000000e-16;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 1.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 17:  E + H2 => E + H2v3
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-1.39618682450319, 2.93664468501587, -2.57302798290394, 1.20616796599908, -0.262729536638480, -0.0184867105308846, 0.0101128565840887, 0.00147049502521815, -0.000430172779036224};
    double Jfit_A = 2.55200000000000e-17;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[5] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 1.5;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 18:  E + H2 => E + H2B3
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-5.99034894295222, 6.37909664428680, -11.3362137399053, 20.9154535163552, -20.1392369316850, 10.5697032280223, -3.10490472878076, 0.480197631795441, -0.0304484368206212};
    double Jfit_A = 3.57500000000000e-15;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[20] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 8.9;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 19:  E + H2 => E + H2B1
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-9.70341238227469, 7.86365637344339, -10.7104185655811, 15.4445570808724, -11.8590939773895, 5.01934946539440, -1.20263949478979, 0.153787305813377, -0.00818380551863853};
    double Jfit_A = 1.61400000000000e-14;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[21] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 11.3;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 20:  E + H2 => E + H2C3
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-7.32794616341152, 7.92196305894959, -11.8636722464222, 19.3532369352440, -17.0023308628604, 8.17287843268494, -2.20914762413174, 0.316630566619916, -0.0187588686931421};
    double Jfit_A = 1.41000000000000e-15;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[22] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 11.75;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 21:  E + H2 => E + H2A3
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-7.60250767853114, 8.16852037014995, -12.1893372071425, 19.8977404140783, -17.5252282982852, 8.45149747910038, -2.29186397849619, 0.329444522183215, -0.0195666238668474};
    double Jfit_A = 1.00800000000000e-15;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[23] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 11.8;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 22:  E + H2 => E + H2R
    Janev_sum = 0.0;
    amrex::Real k_f = 0;
    Jfit_coefs = {-16.3934572207912, 20.2998312854214, -38.6649701069100, 55.6323915034020, -43.2333854046350, 18.9046010565820, -4.71382223469077, 0.627871086310490, -0.0347360527495079};
    double Jfit_A = 7.98600000000000e-15;
    for(int j = 0; j<9; j++) Janev_sum += Jfit_coefs[j] * Te_pow[j];
    k_f = Jfit_A * exp(Janev_sum) * 6.02214085774e23;
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[24] += qdot;
    int rxntype = 1;
    amrex::Real eexci = 15.2;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }









  // V-T relaxation coefficients
  const amrex::Real k_f_VT_N2N2 = 4697269.8 * pow(tc[1], 1.0) *exp(-218.0/pow(tc[1], 1.0/3.0) + 690.0/pow(tc[1], 1.0)) * pow((1.0 - exp(- 3252.0/ tc[1])), -1.0);
  const amrex::Real k_f_VT_N2H2 = 2950849.0 * pow(tc[1], 1.0) *exp(-167.1/pow(tc[1], 1.0/3.0) + 394.0/pow(tc[1], 2.0/3.0)) * pow((1.0 - exp(- 3252.0/ tc[1])), -1.0);
  const amrex::Real k_f_VT_H2H2 = 4498539.2 * pow(tc[1], 0.5) *exp(-93.87/pow(tc[1], 1.0/3.0)) * pow((1.0 - exp(- 5988.2/ tc[1])), -1.0);
  const amrex::Real Xe_N2 = 0.00613;
  const amrex::Real Xe_H2 = 0.02758;
  const amrex::Real DeltaE_N2 = 20.0;
  const amrex::Real DeltaE_H2 = 107.7;
  const amrex::Real E10_N2 = 3252.0;
  const amrex::Real E10_H2 = 5988.2;
  const amrex::Real E20_N2 = 0.59*11604.518;

  // FIXME: should be converted to kg/mol?
  const amrex::Real N2_wt = mw(N2_ID);
  const amrex::Real H2_wt = mw(H2_ID);
  const amrex::Real N2N2_rm = pow(N2_wt,2.0) / (2.0*N2_wt);
  const amrex::Real H2H2_rm = pow(H2_wt,2.0) / (2.0*H2_wt);
  const amrex::Real N2H2_rm = (N2_wt * H2_wt) / (N2_wt + H2_wt);

  // Readability constants for V-V relaxation rate coeffs
  const amrex::Real E_N2_v1 = 0.291 * 11604.518;
  const amrex::Real E_N2_v2 = 0.59 * 11604.518;
  const amrex::Real E_N2_v3 = 0.88 * 11604.518;
  const amrex::Real E_N2_v4 = 1.17 * 11604.518;
  const amrex::Real E_N2_v5 = 1.47 * 11604.518;
  const amrex::Real E_N2_v6 = 1.76 * 11604.518;
  const amrex::Real E_N2_v7 = 2.06 * 11604.518;
  const amrex::Real E_N2_v8 = 2.35 * 11604.518;
  const amrex::Real E_H2_v1 = 0.5 * 11604.518;
  const amrex::Real E_H2_v2 = 1.0 * 11604.518;
  const amrex::Real E_H2_v3 = 1.5 * 11604.518;
  const amrex::Real Q01_N2 = 15057.5 * pow(tc[1]/300.0, 1.5);
  const amrex::Real delta_0_VV = 6.8 / pow(tc[1],0.5); 
  const amrex::Real Q0_N2H2 = 114437.0 * pow(tc[1]/300.0, 1.5);
  const amrex::Real A_N2H2 = 144.0;
  const amrex::Real Qp0_N2H2 = 1445.52 * pow(tc[1]/300.0, 1.5);
  const amrex::Real Ap_N2H2 = 37.0;

  {
    // reaction 36:  N2 + N2v1 <=> 2 N2
    const amrex::Real qf = k_f_VT_N2N2 * (sc[7] * sc[8]);
    const amrex::Real qr = k_f_VT_N2N2 *
                           exp(-(g_RT[7] - 2.000000 * g_RT[7] + g_RT[8])) *
                           ((sc[7] * sc[7]));
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[7] += 2.000000 * qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 37:  N2 + N2v2 <=> N2 + N2v1
    const amrex::Real Zv = (1.0 + 1.0) * (1.0 - Xe_N2) / (1.0 - (1.0 + 1.0)*Xe_N2);
    const amrex::Real gamma_v = 0.32 * 11604.518 * (0.59 - 0.291) * 0.2 * pow(N2N2_rm / tc[1] ,0.5);
    const amrex::Real deltaVT_lo = 0.427 * DeltaE_N2 * 0.2 * pow(N2N2_rm / tc[1],0.5);
    const amrex::Real deltaVT_hi = 1.87 * DeltaE_N2 * pow(0.2, 2.0/3.0) * pow(N2N2_rm / E10_N2 / tc[1], 1.0/3.0);
    const amrex::Real deltaVT = (gamma_v < 20.0) ? deltaVT_lo:deltaVT_hi;
    const amrex::Real Gv = Zv * exp(1.0 * deltaVT);
    const amrex::Real k_f = k_f_VT_N2N2 * Gv;
    const amrex::Real qf = k_f * (sc[7] * sc[9]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[7] - g_RT[7] - g_RT[8] + g_RT[9])) * (sc[7] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[7] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 38:  N2 + N2v3 <=> N2 + N2v2
    const amrex::Real Zv = (2.0 + 1.0) * (1.0 - Xe_N2) / (1.0 - (2.0 + 1.0)*Xe_N2);
    const amrex::Real gamma_v = 0.32 * 11604.518 * (0.88 - 0.59) * 0.2 * pow(N2N2_rm / tc[1] ,0.5);
    const amrex::Real deltaVT_lo = 0.427 * DeltaE_N2 * 0.2 * pow(N2N2_rm / tc[1],0.5);
    const amrex::Real deltaVT_hi = 1.87 * DeltaE_N2 * pow(0.2, 2.0/3.0) * pow(N2N2_rm / E10_N2 / tc[1], 1.0/3.0);
    const amrex::Real deltaVT = (gamma_v < 20.0) ? deltaVT_lo:deltaVT_hi;
    const amrex::Real Gv = Zv * exp(2.0 * deltaVT);
    const amrex::Real k_f = k_f_VT_N2N2 * Gv;
    const amrex::Real qf = k_f * (sc[7] * sc[10]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[7] - g_RT[7] - g_RT[9] + g_RT[10])) * (sc[7] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[7] += qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 39:  N2 + N2v4 <=> N2 + N2v3
    const amrex::Real Zv = (3.0 + 1.0) * (1.0 - Xe_N2) / (1.0 - (3.0 + 1.0)*Xe_N2);
    const amrex::Real gamma_v = 0.32 * 11604.518 * (1.17 - 0.88) * 0.2 * pow(N2N2_rm / tc[1] ,0.5);
    const amrex::Real deltaVT_lo = 0.427 * DeltaE_N2 * 0.2 * pow(N2N2_rm / tc[1],0.5);
    const amrex::Real deltaVT_hi = 1.87 * DeltaE_N2 * pow(0.2, 2.0/3.0) * pow(N2N2_rm / E10_N2 / tc[1], 1.0/3.0);
    const amrex::Real deltaVT = (gamma_v < 20.0) ? deltaVT_lo:deltaVT_hi;
    const amrex::Real Gv = Zv * exp(3.0 * deltaVT);
    const amrex::Real k_f = k_f_VT_N2N2 * Gv;
    const amrex::Real qf = k_f * (sc[7] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[7] - g_RT[7] - g_RT[10] + g_RT[11])) *
                           (sc[7] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[7] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 40:  N2 + N2v5 <=> N2 + N2v4
    const amrex::Real Zv = (4.0 + 1.0) * (1.0 - Xe_N2) / (1.0 - (4.0 + 1.0)*Xe_N2);
    const amrex::Real gamma_v = 0.32 * 11604.518 * (1.47 - 1.17) * 0.2 * pow(N2N2_rm / tc[1] ,0.5);
    const amrex::Real deltaVT_lo = 0.427 * DeltaE_N2 * 0.2 * pow(N2N2_rm / tc[1],0.5);
    const amrex::Real deltaVT_hi = 1.87 * DeltaE_N2 * pow(0.2, 2.0/3.0) * pow(N2N2_rm / E10_N2 / tc[1], 1.0/3.0);
    const amrex::Real deltaVT = (gamma_v < 20.0) ? deltaVT_lo:deltaVT_hi;
    const amrex::Real Gv = Zv * exp(4.0 * deltaVT);
    const amrex::Real k_f = k_f_VT_N2N2 * Gv;
    const amrex::Real qf = k_f * (sc[7] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[7] - g_RT[7] - g_RT[11] + g_RT[12])) *
                           (sc[7] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[7] += qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 41:  N2 + N2v6 <=> N2 + N2v5
    const amrex::Real Zv = (5.0 + 1.0) * (1.0 - Xe_N2) / (5.0 - (1.0 + 1.0)*Xe_N2);
    const amrex::Real gamma_v = 0.32 * 11604.518 * (1.76 - 1.47) * 0.2 * pow(N2N2_rm / tc[1] ,0.5);
    const amrex::Real deltaVT_lo = 0.427 * DeltaE_N2 * 0.2 * pow(N2N2_rm / tc[1],0.5);
    const amrex::Real deltaVT_hi = 1.87 * DeltaE_N2 * pow(0.2, 2.0/3.0) * pow(N2N2_rm / E10_N2 / tc[1], 1.0/3.0);
    const amrex::Real deltaVT = (gamma_v < 20.0) ? deltaVT_lo:deltaVT_hi;
    const amrex::Real Gv = Zv * exp(5.0 * deltaVT);
    const amrex::Real k_f = k_f_VT_N2N2 * Gv;
    const amrex::Real qf = k_f * (sc[7] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[7] - g_RT[7] - g_RT[12] + g_RT[13])) *
                           (sc[7] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[7] += qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 42:  N2 + N2v7 <=> N2 + N2v6
    const amrex::Real Zv = (6.0 + 1.0) * (1.0 - Xe_N2) / (1.0 - (6.0 + 1.0)*Xe_N2);
    const amrex::Real gamma_v = 0.32 * 11604.518 * (2.06 - 1.76) * 0.2 * pow(N2N2_rm / tc[1] ,0.5);
    const amrex::Real deltaVT_lo = 0.427 * DeltaE_N2 * 0.2 * pow(N2N2_rm / tc[1],0.5);
    const amrex::Real deltaVT_hi = 1.87 * DeltaE_N2 * pow(0.2, 2.0/3.0) * pow(N2N2_rm / E10_N2 / tc[1], 1.0/3.0);
    const amrex::Real deltaVT = (gamma_v < 20.0) ? deltaVT_lo:deltaVT_hi;
    const amrex::Real Gv = Zv * exp(6.0 * deltaVT);
    const amrex::Real k_f = k_f_VT_N2N2 * Gv;
    const amrex::Real qf = k_f * (sc[7] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[7] - g_RT[7] - g_RT[13] + g_RT[14])) *
                           (sc[7] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[7] += qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 43:  N2 + N2v8 <=> N2 + N2v7
    const amrex::Real Zv = (7.0 + 1.0) * (1.0 - Xe_N2) / (1.0 - (7.0 + 1.0)*Xe_N2);
    const amrex::Real gamma_v = 0.32 * 11604.518 * (2.35 - 2.06) * 0.2 * pow(N2N2_rm / tc[1] ,0.5);
    const amrex::Real deltaVT_lo = 0.427 * DeltaE_N2 * 0.2 * pow(N2N2_rm / tc[1],0.5);
    const amrex::Real deltaVT_hi = 1.87 * DeltaE_N2 * pow(0.2, 2.0/3.0) * pow(N2N2_rm / E10_N2 / tc[1], 1.0/3.0);
    const amrex::Real deltaVT = (gamma_v < 20.0) ? deltaVT_lo:deltaVT_hi;
    const amrex::Real Gv = Zv * exp(7.0 * deltaVT);
    const amrex::Real k_f = k_f_VT_N2N2 * Gv;
    const amrex::Real qf = k_f * (sc[7] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[7] - g_RT[7] - g_RT[14] + g_RT[15])) *
                           (sc[7] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[7] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 44:  H2 + N2v1 <=> H2 + N2
    const amrex::Real qf = k_f_VT_N2H2 * (sc[2] * sc[8]);
    const amrex::Real qr =
        k_f_VT_N2H2 * exp(-(g_RT[2] - g_RT[2] - g_RT[7] + g_RT[8])) * (sc[2] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[2] += qdot;
    wdot[7] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 45:  H2 + N2v2 <=> H2 + N2v1
    const amrex::Real Zv = (1.0 + 1.0) * (1.0 - Xe_N2) / (1.0 - (1.0 + 1.0)*Xe_N2);
    const amrex::Real gamma_v = 0.32 * 11604.518 * (0.59 - 0.291) * 0.2 * pow(N2H2_rm / tc[1] ,0.5);
    const amrex::Real deltaVT_lo = 0.427 * DeltaE_N2 * 0.2 * pow(N2H2_rm / tc[1],0.5);
    const amrex::Real deltaVT_hi = 1.87 * DeltaE_N2 * pow(0.2, 2.0/3.0) * pow(N2H2_rm / E10_N2 / tc[1], 1.0/3.0);
    const amrex::Real deltaVT = (gamma_v < 20.0) ? deltaVT_lo:deltaVT_hi;
    const amrex::Real Gv = Zv * exp(1.0 * deltaVT);
    const amrex::Real k_f = k_f_VT_N2H2 * Gv;
    const amrex::Real qf = k_f * (sc[2] * sc[9]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[2] - g_RT[2] - g_RT[8] + g_RT[9])) * (sc[2] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[2] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 46:  H2 + N2v3 <=> H2 + N2v2
    const amrex::Real Zv = (2.0 + 1.0) * (1.0 - Xe_N2) / (1.0 - (2.0 + 1.0)*Xe_N2);
    const amrex::Real gamma_v = 0.32 * 11604.518 * (0.88 - 0.59) * 0.2 * pow(N2H2_rm / tc[1] ,0.5);
    const amrex::Real deltaVT_lo = 0.427 * DeltaE_N2 * 0.2 * pow(N2H2_rm / tc[1],0.5);
    const amrex::Real deltaVT_hi = 1.87 * DeltaE_N2 * pow(0.2, 2.0/3.0) * pow(N2H2_rm / E10_N2 / tc[1], 1.0/3.0);
    const amrex::Real deltaVT = (gamma_v < 20.0) ? deltaVT_lo:deltaVT_hi;
    const amrex::Real Gv = Zv * exp(2.0 * deltaVT);
    const amrex::Real k_f = k_f_VT_N2H2 * Gv;
    const amrex::Real qf = k_f * (sc[2] * sc[10]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[2] - g_RT[2] - g_RT[9] + g_RT[10])) * (sc[2] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[2] += qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 47:  H2 + N2v4 <=> H2 + N2v3
    const amrex::Real Zv = (3.0 + 1.0) * (1.0 - Xe_N2) / (1.0 - (3.0 + 1.0)*Xe_N2);
    const amrex::Real gamma_v = 0.32 * 11604.518 * (1.17 - 0.88) * 0.2 * pow(N2H2_rm / tc[1] ,0.5);
    const amrex::Real deltaVT_lo = 0.427 * DeltaE_N2 * 0.2 * pow(N2H2_rm / tc[1],0.5);
    const amrex::Real deltaVT_hi = 1.87 * DeltaE_N2 * pow(0.2, 2.0/3.0) * pow(N2H2_rm / E10_N2 / tc[1], 1.0/3.0);
    const amrex::Real deltaVT = (gamma_v < 20.0) ? deltaVT_lo:deltaVT_hi;
    const amrex::Real Gv = Zv * exp(3.0 * deltaVT);
    const amrex::Real k_f = k_f_VT_N2H2 * Gv;
    const amrex::Real qf = k_f * (sc[2] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[2] - g_RT[10] + g_RT[11])) *
                           (sc[2] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[2] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 48:  H2 + N2v5 <=> H2 + N2v4
    const amrex::Real Zv = (4.0 + 1.0) * (1.0 - Xe_N2) / (1.0 - (4.0 + 1.0)*Xe_N2);
    const amrex::Real gamma_v = 0.32 * 11604.518 * (1.47 - 1.17) * 0.2 * pow(N2H2_rm / tc[1] ,0.5);
    const amrex::Real deltaVT_lo = 0.427 * DeltaE_N2 * 0.2 * pow(N2H2_rm / tc[1],0.5);
    const amrex::Real deltaVT_hi = 1.87 * DeltaE_N2 * pow(0.2, 2.0/3.0) * pow(N2H2_rm / E10_N2 / tc[1], 1.0/3.0);
    const amrex::Real deltaVT = (gamma_v < 20.0) ? deltaVT_lo:deltaVT_hi;
    const amrex::Real Gv = Zv * exp(4.0 * deltaVT);
    const amrex::Real k_f = k_f_VT_N2H2 * Gv;
    const amrex::Real qf = k_f * (sc[2] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[2] - g_RT[11] + g_RT[12])) *
                           (sc[2] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[2] += qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 49:  H2 + N2v6 <=> H2 + N2v5
    const amrex::Real Zv = (5.0 + 1.0) * (1.0 - Xe_N2) / (1.0 - (5.0 + 1.0)*Xe_N2);
    const amrex::Real gamma_v = 0.32 * 11604.518 * (1.76 - 1.47) * 0.2 * pow(N2H2_rm / tc[1] ,0.5);
    const amrex::Real deltaVT_lo = 0.427 * DeltaE_N2 * 0.2 * pow(N2H2_rm / tc[1],0.5);
    const amrex::Real deltaVT_hi = 1.87 * DeltaE_N2 * pow(0.2, 2.0/3.0) * pow(N2H2_rm / E10_N2 / tc[1], 1.0/3.0);
    const amrex::Real deltaVT = (gamma_v < 20.0) ? deltaVT_lo:deltaVT_hi;
    const amrex::Real Gv = Zv * exp(5.0 * deltaVT);
    const amrex::Real k_f = k_f_VT_N2H2 * Gv;
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[2] - g_RT[12] + g_RT[13])) *
                           (sc[2] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[2] += qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 50:  H2 + N2v7 <=> H2 + N2v6
    const amrex::Real Zv = (6.0 + 1.0) * (1.0 - Xe_N2) / (1.0 - (6.0 + 1.0)*Xe_N2);
    const amrex::Real gamma_v = 0.32 * 11604.518 * (2.06 - 1.76) * 0.2 * pow(N2H2_rm / tc[1] ,0.5);
    const amrex::Real deltaVT_lo = 0.427 * DeltaE_N2 * 0.2 * pow(N2H2_rm / tc[1],0.5);
    const amrex::Real deltaVT_hi = 1.87 * DeltaE_N2 * pow(0.2, 2.0/3.0) * pow(N2H2_rm / E10_N2 / tc[1], 1.0/3.0);
    const amrex::Real deltaVT = (gamma_v < 20.0) ? deltaVT_lo:deltaVT_hi;
    const amrex::Real Gv = Zv * exp(6.0 * deltaVT);
    const amrex::Real k_f = k_f_VT_N2H2 * Gv;
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[2] - g_RT[13] + g_RT[14])) *
                           (sc[2] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[2] += qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 51:  H2 + N2v8 <=> H2 + N2v7
    const amrex::Real Zv = (7.0 + 1.0) * (1.0 - Xe_N2) / (1.0 - (7.0 + 1.0)*Xe_N2);
    const amrex::Real gamma_v = 0.32 * 11604.518 * (2.35 - 2.06) * 0.2 * pow(N2H2_rm / tc[1] ,0.5);
    const amrex::Real deltaVT_lo = 0.427 * DeltaE_N2 * 0.2 * pow(N2H2_rm / tc[1],0.5);
    const amrex::Real deltaVT_hi = 1.87 * DeltaE_N2 * pow(0.2, 2.0/3.0) * pow(N2H2_rm / E10_N2 / tc[1], 1.0/3.0);
    const amrex::Real deltaVT = (gamma_v < 20.0) ? deltaVT_lo:deltaVT_hi;
    const amrex::Real Gv = Zv * exp(7.0 * deltaVT);
    const amrex::Real k_f = k_f_VT_N2H2 * Gv;
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[2] - g_RT[14] + g_RT[15])) *
                           (sc[2] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[2] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 52:  N + N2v1 <=> N + N2
    const amrex::Real k0 = 240920000.0 * pow(tc[1],0.5);
    const amrex::Real beta_k = 0.065;
    const amrex::Real k_f = (beta_k * E_N2_v1 > 7280.0) ? k0 : k0 * exp(-7280.0 / tc[1] + beta_k*E_N2_v1/tc[1]);
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[6] - g_RT[6] - g_RT[7] + g_RT[8])) * (sc[6] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[6] += qdot;
    wdot[7] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 53:  N + N2v2 <=> N + N2v1
    const amrex::Real k0 = 240920000.0 * pow(tc[1],0.5);
    const amrex::Real beta_k = 0.065;
    const amrex::Real k_f = (beta_k * E_N2_v2 > 7280.0) ? k0 : k0 * exp(-7280.0 / tc[1] + beta_k*E_N2_v2/tc[1]);
    const amrex::Real qf = k_f * (sc[6] * sc[9]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[6] - g_RT[6] - g_RT[8] + g_RT[9])) * (sc[6] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[6] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 54:  N + N2v3 <=> N + N2v2
    const amrex::Real k0 = 240920000.0 * pow(tc[1],0.5);
    const amrex::Real beta_k = 0.065;
    const amrex::Real k_f = (beta_k * E_N2_v3 > 7280.0) ? k0 : k0 * exp(-7280.0 / tc[1] + beta_k*E_N2_v3/tc[1]);
    const amrex::Real qf = k_f * (sc[6] * sc[10]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[6] - g_RT[6] - g_RT[9] + g_RT[10])) * (sc[6] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[6] += qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 55:  N + N2v4 <=> N + N2v3
    const amrex::Real k0 = 240920000.0 * pow(tc[1],0.5);
    const amrex::Real beta_k = 0.065;
    const amrex::Real k_f = (beta_k * E_N2_v4 > 7280.0) ? k0 : k0 * exp(-7280.0 / tc[1] + beta_k*E_N2_v4/tc[1]);
    const amrex::Real qf = k_f * (sc[6] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[6] - g_RT[10] + g_RT[11])) *
                           (sc[6] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[6] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 56:  N + N2v5 <=> N + N2v4
    const amrex::Real k0 = 240920000.0 * pow(tc[1],0.5);
    const amrex::Real beta_k = 0.065;
    const amrex::Real k_f = (beta_k * E_N2_v5 > 7280.0) ? k0 : k0 * exp(-7280.0 / tc[1] + beta_k*E_N2_v5/tc[1]);
    const amrex::Real qf = k_f * (sc[6] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[6] - g_RT[11] + g_RT[12])) *
                           (sc[6] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[6] += qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 57:  N + N2v6 <=> N + N2v5
    const amrex::Real k0 = 240920000.0 * pow(tc[1],0.5);
    const amrex::Real beta_k = 0.065;
    const amrex::Real k_f = (beta_k * E_N2_v6 > 7280.0) ? k0 : k0 * exp(-7280.0 / tc[1] + beta_k*E_N2_v6/tc[1]);
    const amrex::Real qf = k_f * (sc[6] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[6] - g_RT[12] + g_RT[13])) *
                           (sc[6] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 58:  N + N2v7 <=> N + N2v6
    const amrex::Real k0 = 240920000.0 * pow(tc[1],0.5);
    const amrex::Real beta_k = 0.065;
    const amrex::Real k_f = (beta_k * E_N2_v7 > 7280.0) ? k0 : k0 * exp(-7280.0 / tc[1] + beta_k*E_N2_v7/tc[1]);
    const amrex::Real qf = k_f * (sc[6] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[6] - g_RT[13] + g_RT[14])) *
                           (sc[6] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[6] += qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 59:  N + N2v8 <=> N + N2v7
    const amrex::Real k0 = 240920000.0 * pow(tc[1],0.5);
    const amrex::Real beta_k = 0.065;
    const amrex::Real k_f = (beta_k * E_N2_v8 > 7280.0) ? k0 : k0 * exp(-7280.0 / tc[1] + beta_k*E_N2_v8/tc[1]);
    const amrex::Real qf = k_f * (sc[6] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[6] - g_RT[14] + g_RT[15])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[6] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 60:  H + N2v1 <=> H + N2
    const amrex::Real k0 = 240920000.0 * pow(tc[1],0.5);
    const amrex::Real beta_k = 0.105;
    const amrex::Real k_f = (beta_k * E_N2_v1 > 7500.0) ? k0 : k0 * exp(-7500.0 / tc[1] + beta_k*E_N2_v1/tc[1]);
    const amrex::Real qf = k_f * (sc[1] * sc[8]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[1] - g_RT[1] - g_RT[7] + g_RT[8])) * (sc[1] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[7] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 61:  H + N2v2 <=> H + N2v1
    const amrex::Real k0 = 240920000.0 * pow(tc[1],0.5);
    const amrex::Real beta_k = 0.105;
    const amrex::Real k_f = (beta_k * E_N2_v2 > 7500.0) ? k0 : k0 * exp(-7500.0 / tc[1] + beta_k*E_N2_v2/tc[1]);
    const amrex::Real qf = k_f * (sc[1] * sc[9]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[1] - g_RT[1] - g_RT[8] + g_RT[9])) * (sc[1] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 62:  H + N2v3 <=> H + N2v2
    const amrex::Real k0 = 240920000.0 * pow(tc[1],0.5);
    const amrex::Real beta_k = 0.105;
    const amrex::Real k_f = (beta_k * E_N2_v3 > 7500.0) ? k0 : k0 * exp(-7500.0 / tc[1] + beta_k*E_N2_v3/tc[1]);
    const amrex::Real qf = k_f * (sc[1] * sc[10]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[1] - g_RT[1] - g_RT[9] + g_RT[10])) * (sc[1] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 63:  H + N2v4 <=> H + N2v3
    const amrex::Real k0 = 240920000.0 * pow(tc[1],0.5);
    const amrex::Real beta_k = 0.105;
    const amrex::Real k_f = (beta_k * E_N2_v4 > 7500.0) ? k0 : k0 * exp(-7500.0 / tc[1] + beta_k*E_N2_v4/tc[1]);
    const amrex::Real qf = k_f * (sc[1] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[1] - g_RT[10] + g_RT[11])) *
                           (sc[1] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 64:  H + N2v5 <=> H + N2v4
    const amrex::Real k0 = 240920000.0 * pow(tc[1],0.5);
    const amrex::Real beta_k = 0.105;
    const amrex::Real k_f = (beta_k * E_N2_v5 > 7500.0) ? k0 : k0 * exp(-7500.0 / tc[1] + beta_k*E_N2_v5/tc[1]);
    const amrex::Real qf = k_f * (sc[1] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[1] - g_RT[11] + g_RT[12])) *
                           (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 65:  H + N2v6 <=> H + N2v5
    const amrex::Real k0 = 240920000.0 * pow(tc[1],0.5);
    const amrex::Real beta_k = 0.105;
    const amrex::Real k_f = (beta_k * E_N2_v6 > 7500.0) ? k0 : k0 * exp(-7500.0 / tc[1] + beta_k*E_N2_v6/tc[1]);
    const amrex::Real qf = k_f * (sc[1] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[1] - g_RT[12] + g_RT[13])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 66:  H + N2v7 <=> H + N2v6
    const amrex::Real k0 = 240920000.0 * pow(tc[1],0.5);
    const amrex::Real beta_k = 0.105;
    const amrex::Real k_f = (beta_k * E_N2_v7 > 7500.0) ? k0 : k0 * exp(-7500.0 / tc[1] + beta_k*E_N2_v7/tc[1]);
    const amrex::Real qf = k_f * (sc[1] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[1] - g_RT[13] + g_RT[14])) *
                           (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 67:  H + N2v8 <=> H + N2v7
    const amrex::Real k0 = 240920000.0 * pow(tc[1],0.5);
    const amrex::Real beta_k = 0.105;
    const amrex::Real k_f = (beta_k * E_N2_v8 > 7500.0) ? k0 : k0 * exp(-7500.0 / tc[1] + beta_k*E_N2_v8/tc[1]);
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[1] - g_RT[14] + g_RT[15])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 71:  H2 + H2v1 <=> 2 H2
    const amrex::Real qf = k_f_VT_H2H2 * (sc[2] * sc[3]);
    const amrex::Real qr = k_f_VT_H2H2 *
                           exp(-(g_RT[2] - 2.000000 * g_RT[2] + g_RT[3])) *
                           ((sc[2] * sc[2]));
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[2] += 2.000000 * qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 72:  H2 + H2v2 <=> H2 + H2v1
    const amrex::Real Zv = (1.0 + 1.0) * (1.0 - Xe_H2) / (1.0 - (1.0 + 1.0)*Xe_H2);
    const amrex::Real gamma_v = 0.32 * 11604.518 * (1.0 - 0.5) * 0.2 * pow(H2H2_rm / tc[1] ,0.5);
    const amrex::Real deltaVT_lo = 0.427 * DeltaE_H2 * 0.2 * pow(H2H2_rm / tc[1],0.5);
    const amrex::Real deltaVT_hi = 1.87 * DeltaE_H2 * pow(0.2, 2.0/3.0) * pow(H2H2_rm / E10_H2 / tc[1], 1.0/3.0);
    const amrex::Real deltaVT = (gamma_v < 20.0) ? deltaVT_lo:deltaVT_hi;
    const amrex::Real Gv = Zv * exp(1.0 * deltaVT);
    const amrex::Real k_f = k_f_VT_H2H2 * Gv;
    const amrex::Real qf = k_f * (sc[2] * sc[4]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[2] - g_RT[2] - g_RT[3] + g_RT[4])) * (sc[2] * sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[2] += qdot;
    wdot[3] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 73:  H2 + H2v3 <=> H2 + H2v2
    const amrex::Real Zv = (2.0 + 1.0) * (1.0 - Xe_H2) / (1.0 - (2.0 + 1.0)*Xe_H2);
    const amrex::Real gamma_v = 0.32 * 11604.518 * (1.5 - 1.0) * 0.2 * pow(H2H2_rm / tc[1] ,0.5);
    const amrex::Real deltaVT_lo = 0.427 * DeltaE_H2 * 0.2 * pow(H2H2_rm / tc[1],0.5);
    const amrex::Real deltaVT_hi = 1.87 * DeltaE_H2 * pow(0.2, 2.0/3.0) * pow(H2H2_rm / E10_H2 / tc[1], 1.0/3.0);
    const amrex::Real deltaVT = (gamma_v < 20.0) ? deltaVT_lo:deltaVT_hi;
    const amrex::Real Gv = Zv * exp(2.0 * deltaVT);
    const amrex::Real k_f = k_f_VT_H2H2 * Gv;
    const amrex::Real qf = k_f * (sc[2] * sc[5]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[2] - g_RT[2] - g_RT[4] + g_RT[5])) * (sc[2] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[2] += qdot;
    wdot[4] += qdot;
    wdot[5] -= qdot;
  }

  {
    // reaction 77:  H + H2v1 <=> H + H2
    const amrex::Real delta_v = (1.0 + 1.0) * (1.0 + 1.0*107.7 / 5988.2);
    const amrex::Real k_f = delta_v * pow(1.0 - 5.67e-2 * 1.0, 2.66) * 14455200000.0 * exp(-162.6/pow(tc[1],1.0/3.0) * pow(1.0 - 5.67e-2 * 1.0, 0.681));
    const amrex::Real qf = k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[1] - g_RT[1] - g_RT[2] + g_RT[3])) * (sc[1] * sc[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[2] += qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 78:  H + H2v2 <=> H + H2v1
    const amrex::Real delta_v = (2.0 + 1.0) * (1.0 + 2.0*107.7 / 5988.2);
    const amrex::Real k_f = delta_v * pow(1.0 - 5.67e-2 * 2.0, 2.66) * 14455200000.0 * exp(-162.6/pow(tc[1],1.0/3.0) * pow(1.0 - 5.67e-2 * 2.0, 0.681));
    const amrex::Real qf = k_f * (sc[1] * sc[4]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[1] - g_RT[1] - g_RT[3] + g_RT[4])) * (sc[1] * sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[3] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 79:  H + H2v3 <=> H + H2v2
    const amrex::Real delta_v = (3.0 + 1.0) * (1.0 + 3.0*107.7 / 5988.2);
    const amrex::Real k_f = delta_v * pow(1.0 - 5.67e-2 * 3.0, 2.66) * 14455200000.0 * exp(-162.6/pow(tc[1],1.0/3.0) * pow(1.0 - 5.67e-2 * 3.0, 0.681));
    const amrex::Real qf = k_f * (sc[1] * sc[5]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[1] - g_RT[1] - g_RT[4] + g_RT[5])) * (sc[1] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[4] += qdot;
    wdot[5] -= qdot;
  }

  {
    // reaction 80:  2 N2v1 <=> N2 + N2v2
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v1 - 0.0) - (E_N2_v2 - E_N2_v1))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (0.0 + 1.0) * (1.0 + 0.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (1.0 + 1.0) * (1.0 + 1.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * ((sc[8] * sc[8]));
    const amrex::Real qr =
        k_f * exp(-(-g_RT[7] + 2.000000 * g_RT[8] - g_RT[9])) * (sc[7] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[8] -= 2.000000 * qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 81:  N2v1 + N2v2 <=> N2 + N2v3
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v1 - 0.0) - (E_N2_v3 - E_N2_v2))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (0.0 + 1.0) * (1.0 + 0.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (2.0 + 1.0) * (1.0 + 2.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[8] * sc[9]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[7] + g_RT[8] + g_RT[9] - g_RT[10])) *
                           (sc[7] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[8] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 82:  N2v1 + N2v3 <=> N2 + N2v4
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v1 - 0.0) - (E_N2_v4 - E_N2_v3))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (0.0 + 1.0) * (1.0 + 0.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (3.0 + 1.0) * (1.0 + 3.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[8] * sc[10]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[7] + g_RT[8] + g_RT[10] - g_RT[11])) *
                           (sc[7] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[8] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 83:  N2v1 + N2v4 <=> N2 + N2v5
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v1 - 0.0) - (E_N2_v5 - E_N2_v4))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (0.0 + 1.0) * (1.0 + 0.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (4.0 + 1.0) * (1.0 + 4.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[8] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[7] + g_RT[8] + g_RT[11] - g_RT[12])) *
                           (sc[7] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[8] -= qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 84:  N2v1 + N2v5 <=> N2 + N2v6
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v1 - 0.0) - (E_N2_v6 - E_N2_v5))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (0.0 + 1.0) * (1.0 + 0.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (5.0 + 1.0) * (1.0 + 5.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[8] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[7] + g_RT[8] + g_RT[12] - g_RT[13])) *
                           (sc[7] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[8] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 85:  N2v1 + N2v6 <=> N2 + N2v7
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v1 - 0.0) - (E_N2_v7 - E_N2_v6))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (0.0 + 1.0) * (1.0 + 0.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (6.0 + 1.0) * (1.0 + 6.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[8] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[7] + g_RT[8] + g_RT[13] - g_RT[14])) *
                           (sc[7] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[8] -= qdot;
    wdot[13] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 86:  N2v1 + N2v7 <=> N2 + N2v8
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v1 - 0.0) - (E_N2_v8 - E_N2_v7))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (0.0 + 1.0) * (1.0 + 0.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (7.0 + 1.0) * (1.0 + 7.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[7] + g_RT[8] + g_RT[14] - g_RT[15])) *
                           (sc[7] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[8] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 87:  2 N2v2 <=> N2v1 + N2v3
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v2 - E_N2_v1) - (E_N2_v3 - E_N2_v2))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (1.0 + 1.0) * (1.0 + 1.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (2.0 + 1.0) * (1.0 + 2.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * ((sc[9] * sc[9]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] + 2.000000 * g_RT[9] - g_RT[10])) *
                           (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= 2.000000 * qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 88:  N2v2 + N2v3 <=> N2v1 + N2v4
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v2 - E_N2_v1) - (E_N2_v4 - E_N2_v3))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (1.0 + 1.0) * (1.0 + 1.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (3.0 + 1.0) * (1.0 + 3.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[9] * sc[10]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] + g_RT[9] + g_RT[10] - g_RT[11])) *
                           (sc[8] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 89:  N2v2 + N2v4 <=> N2v1 + N2v5
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v2 - E_N2_v1) - (E_N2_v5 - E_N2_v4))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (1.0 + 1.0) * (1.0 + 1.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (4.0 + 1.0) * (1.0 + 4.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[9] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] + g_RT[9] + g_RT[11] - g_RT[12])) *
                           (sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 90:  N2v2 + N2v5 <=> N2v1 + N2v6
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v2 - E_N2_v1) - (E_N2_v6 - E_N2_v5))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (1.0 + 1.0) * (1.0 + 1.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (5.0 + 1.0) * (1.0 + 5.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[9] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] + g_RT[9] + g_RT[12] - g_RT[13])) *
                           (sc[8] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 91:  N2v2 + N2v6 <=> N2v1 + N2v7
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v2 - E_N2_v1) - (E_N2_v7 - E_N2_v6))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (1.0 + 1.0) * (1.0 + 1.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (6.0 + 1.0) * (1.0 + 6.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[9] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] + g_RT[9] + g_RT[13] - g_RT[14])) *
                           (sc[8] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[13] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 92:  N2v2 + N2v7 <=> N2v1 + N2v8
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v2 - E_N2_v1) - (E_N2_v8 - E_N2_v7))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (1.0 + 1.0) * (1.0 + 1.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (7.0 + 1.0) * (1.0 + 7.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[9] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[8] + g_RT[9] + g_RT[14] - g_RT[15])) *
                           (sc[8] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 93:  2 N2v3 <=> N2v2 + N2v4
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v3 - E_N2_v2) - (E_N2_v4 - E_N2_v3))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (2.0 + 1.0) * (1.0 + 2.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (3.0 + 1.0) * (1.0 + 3.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * ((sc[10] * sc[10]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[9] + 2.000000 * g_RT[10] - g_RT[11])) *
                           (sc[9] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= 2.000000 * qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 94:  N2v3 + N2v4 <=> N2v2 + N2v5
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v3 - E_N2_v2) - (E_N2_v5 - E_N2_v4))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (2.0 + 1.0) * (1.0 + 2.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (4.0 + 1.0) * (1.0 + 4.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[10] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[9] + g_RT[10] + g_RT[11] - g_RT[12])) *
                           (sc[9] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 95:  N2v3 + N2v5 <=> N2v2 + N2v6
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v3 - E_N2_v2) - (E_N2_v6 - E_N2_v5))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (2.0 + 1.0) * (1.0 + 2.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (5.0 + 1.0) * (1.0 + 5.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[10] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[9] + g_RT[10] + g_RT[12] - g_RT[13])) *
                           (sc[9] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 96:  N2v3 + N2v6 <=> N2v2 + N2v7
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v3 - E_N2_v2) - (E_N2_v7 - E_N2_v6))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (2.0 + 1.0) * (1.0 + 2.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (6.0 + 1.0) * (1.0 + 6.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[10] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[9] + g_RT[10] + g_RT[13] - g_RT[14])) *
                           (sc[9] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[13] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 97:  N2v3 + N2v7 <=> N2v2 + N2v8
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v3 - E_N2_v2) - (E_N2_v8 - E_N2_v7))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (2.0 + 1.0) * (1.0 + 2.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (7.0 + 1.0) * (1.0 + 7.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[10] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[9] + g_RT[10] + g_RT[14] - g_RT[15])) *
                           (sc[9] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 98:  2 N2v4 <=> N2v3 + N2v5
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v4 - E_N2_v3) - (E_N2_v5 - E_N2_v4))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (3.0 + 1.0) * (1.0 + 3.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (4.0 + 1.0) * (1.0 + 4.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * ((sc[11] * sc[11]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[10] + 2.000000 * g_RT[11] - g_RT[12])) *
                           (sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= 2.000000 * qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 99:  N2v4 + N2v5 <=> N2v3 + N2v6
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v4 - E_N2_v3) - (E_N2_v6 - E_N2_v5))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (3.0 + 1.0) * (1.0 + 3.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (5.0 + 1.0) * (1.0 + 5.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[11] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[10] + g_RT[11] + g_RT[12] - g_RT[13])) *
                           (sc[10] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 100:  N2v4 + N2v6 <=> N2v3 + N2v7
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v4 - E_N2_v3) - (E_N2_v7 - E_N2_v6))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (3.0 + 1.0) * (1.0 + 3.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (6.0 + 1.0) * (1.0 + 6.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[11] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[10] + g_RT[11] + g_RT[13] - g_RT[14])) *
                           (sc[10] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[13] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 101:  N2v4 + N2v7 <=> N2v3 + N2v8
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v4 - E_N2_v3) - (E_N2_v8 - E_N2_v7))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (3.0 + 1.0) * (1.0 + 3.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (7.0 + 1.0) * (1.0 + 7.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[11] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[10] + g_RT[11] + g_RT[14] - g_RT[15])) *
                           (sc[10] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 102:  2 N2v5 <=> N2v4 + N2v6
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v5 - E_N2_v4) - (E_N2_v6 - E_N2_v5))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (4.0 + 1.0) * (1.0 + 4.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (5.0 + 1.0) * (1.0 + 5.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * ((sc[12] * sc[12]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[11] + 2.000000 * g_RT[12] - g_RT[13])) *
                           (sc[11] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= 2.000000 * qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 103:  N2v5 + N2v6 <=> N2v4 + N2v7
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v5 - E_N2_v4) - (E_N2_v7 - E_N2_v6))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (4.0 + 1.0) * (1.0 + 4.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (6.0 + 1.0) * (1.0 + 6.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[12] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[11] + g_RT[12] + g_RT[13] - g_RT[14])) *
                           (sc[11] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[13] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 104:  N2v5 + N2v7 <=> N2v4 + N2v8
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v5 - E_N2_v4) - (E_N2_v8 - E_N2_v7))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (4.0 + 1.0) * (1.0 + 4.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (7.0 + 1.0) * (1.0 + 7.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[12] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[11] + g_RT[12] + g_RT[14] - g_RT[15])) *
                           (sc[11] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 105:  2 N2v6 <=> N2v5 + N2v7
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v6 - E_N2_v5) - (E_N2_v7 - E_N2_v6))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (5.0 + 1.0) * (1.0 + 5.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (6.0 + 1.0) * (1.0 + 6.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * ((sc[13] * sc[13]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[12] + 2.000000 * g_RT[13] - g_RT[14])) *
                           (sc[12] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[13] -= 2.000000 * qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 106:  N2v6 + N2v7 <=> N2v5 + N2v8
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v6 - E_N2_v5) - (E_N2_v8 - E_N2_v7))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (5.0 + 1.0) * (1.0 + 5.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (7.0 + 1.0) * (1.0 + 7.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[13] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[12] + g_RT[13] + g_RT[14] - g_RT[15])) *
                           (sc[12] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[13] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 107:  2 N2v7 <=> N2v6 + N2v8
    const amrex::Real F_vw = exp(-delta_0_VV * ((E_N2_v7 - E_N2_v6) - (E_N2_v8 - E_N2_v7))/(2.0*DeltaE_N2));
    const amrex::Real delta_v = (6.0 + 1.0) * (1.0 + 6.0*DeltaE_N2/E_N2_v1);
    const amrex::Real delta_w = (7.0 + 1.0) * (1.0 + 7.0*DeltaE_N2/E_N2_v1);
    const amrex::Real k_f = Q01_N2 * delta_v * delta_w * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * ((sc[14] * sc[14]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[13] + 2.000000 * g_RT[14] - g_RT[15])) *
                           (sc[13] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[14] -= 2.000000 * qdot;
    wdot[15] += qdot;
  }

//   // TODO: These don't seem to be mentioned in Hong et al., J Phys. D., 2017 ?
//   // {
//   //   // reaction 108:  2 H2v1 <=> H2 + H2v2
//   //   const amrex::Real k_f = 0;
//   //   const amrex::Real qf = k_f * ((sc[3] * sc[3]));
//   //   const amrex::Real qr =
//   //       k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[3] - g_RT[4])) * (sc[2] * sc[4]);
//   //   const amrex::Real qdot = qf - qr;
//   //   wdot[2] += qdot;
//   //   wdot[3] -= 2.000000 * qdot;
//   //   wdot[4] += qdot;
//   // }
// 
//   // {
//   //   // reaction 109:  H2v1 + H2v2 <=> H2 + H2v3
//   //   const amrex::Real k_f = 0;
//   //   const amrex::Real qf = k_f * (sc[3] * sc[4]);
//   //   const amrex::Real qr =
//   //       k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[4] - g_RT[5])) * (sc[2] * sc[5]);
//   //   const amrex::Real qdot = qf - qr;
//   //   wdot[2] += qdot;
//   //   wdot[3] -= qdot;
//   //   wdot[4] -= qdot;
//   //   wdot[5] += qdot;
//   // }
// 
//   // {
//   //   // reaction 110:  2 H2v2 <=> H2v1 + H2v3
//   //   const amrex::Real k_f = 0;
//   //   const amrex::Real qf = k_f * ((sc[4] * sc[4]));
//   //   const amrex::Real qr =
//   //       k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[4] - g_RT[5])) * (sc[3] * sc[5]);
//   //   const amrex::Real qdot = qf - qr;
//   //   wdot[3] += qdot;
//   //   wdot[4] -= 2.000000 * qdot;
//   //   wdot[5] += qdot;
//   // }

  {
    // reaction 111:  H2v1 + N2 <=> H2 + N2v1
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v1 - 0.0) - (E_N2_v1 - 0.0)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[3] * sc[7]);
    const amrex::Real qr =
        k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[7] - g_RT[8])) * (sc[2] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[7] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 112:  H2v1 + N2v1 <=> H2 + N2v2
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v1 - 0.0) - (E_N2_v2 - E_N2_v1)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr =
        k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[8] - g_RT[9])) * (sc[2] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 113:  H2v1 + N2v2 <=> H2 + N2v3
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v1 - 0.0) - (E_N2_v3 - E_N2_v2)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[3] * sc[9]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] + g_RT[9] - g_RT[10])) *
                           (sc[2] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 114:  H2v1 + N2v3 <=> H2 + N2v4
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v1 - 0.0) - (E_N2_v4 - E_N2_v3)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (3.0 + 1.0) * (1.0 + 3.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[3] * sc[10]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] + g_RT[10] - g_RT[11])) *
                           (sc[2] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 115:  H2v1 + N2v4 <=> H2 + N2v5
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v1 - 0.0) - (E_N2_v5 - E_N2_v4)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (4.0 + 1.0) * (1.0 + 4.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[3] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] + g_RT[11] - g_RT[12])) *
                           (sc[2] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 116:  H2v1 + N2v5 <=> H2 + N2v6
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v1 - 0.0) - (E_N2_v6 - E_N2_v5)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (5.0 + 1.0) * (1.0 + 5.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] + g_RT[12] - g_RT[13])) *
                           (sc[2] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 117:  H2v1 + N2v6 <=> H2 + N2v7
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v1 - 0.0) - (E_N2_v7 - E_N2_v6)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (6.0 + 1.0) * (1.0 + 6.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[3] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] + g_RT[13] - g_RT[14])) *
                           (sc[2] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[13] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 118:  H2v1 + N2v7 <=> H2 + N2v8
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v1 - 0.0) - (E_N2_v8 - E_N2_v7)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (7.0 + 1.0) * (1.0 + 7.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] + g_RT[14] - g_RT[15])) *
                           (sc[2] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 119:  H2v2 + N2 <=> H2v1 + N2v1
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v2 - E_H2_v1) - (E_N2_v1 - 0.0)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr =
        k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[7] - g_RT[8])) * (sc[3] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[7] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 120:  H2v2 + N2v1 <=> H2v1 + N2v2
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v2 - E_H2_v1) - (E_N2_v2 - E_N2_v1)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr =
        k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[8] - g_RT[9])) * (sc[3] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 121:  H2v2 + N2v2 <=> H2v1 + N2v3
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v2 - E_H2_v1) - (E_N2_v3 - E_N2_v2)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[4] + g_RT[9] - g_RT[10])) *
                           (sc[3] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 122:  H2v2 + N2v3 <=> H2v1 + N2v4
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v2 - E_H2_v1) - (E_N2_v4 - E_N2_v3)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (3.0 + 1.0) * (1.0 + 3.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[4] + g_RT[10] - g_RT[11])) *
                           (sc[3] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 123:  H2v2 + N2v4 <=> H2v1 + N2v5
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v2 - E_H2_v1) - (E_N2_v5 - E_N2_v4)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (4.0 + 1.0) * (1.0 + 4.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[4] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[4] + g_RT[11] - g_RT[12])) *
                           (sc[3] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 124:  H2v2 + N2v5 <=> H2v1 + N2v6
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v2 - E_H2_v1) - (E_N2_v6 - E_N2_v5)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (5.0 + 1.0) * (1.0 + 5.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[4] + g_RT[12] - g_RT[13])) *
                           (sc[3] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 125:  H2v2 + N2v6 <=> H2v1 + N2v7
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v2 - E_H2_v1) - (E_N2_v7 - E_N2_v6)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (6.0 + 1.0) * (1.0 + 6.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[4] + g_RT[13] - g_RT[14])) *
                           (sc[3] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[13] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 126:  H2v2 + N2v7 <=> H2v1 + N2v8
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v2 - E_H2_v1) - (E_N2_v8 - E_N2_v7)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (7.0 + 1.0) * (1.0 + 7.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[4] + g_RT[14] - g_RT[15])) *
                           (sc[3] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 127:  H2v3 + N2 <=> H2v2 + N2v1
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v3 - E_H2_v2) - (E_N2_v1 - 0.0)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[5] * sc[7]);
    const amrex::Real qr =
        k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[7] - g_RT[8])) * (sc[4] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[7] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 128:  H2v3 + N2v1 <=> H2v2 + N2v2
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v3 - E_H2_v2) - (E_N2_v2 - E_N2_v1)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[5] * sc[8]);
    const amrex::Real qr =
        k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[8] - g_RT[9])) * (sc[4] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 129:  H2v3 + N2v2 <=> H2v2 + N2v3
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v3 - E_H2_v2) - (E_N2_v3 - E_N2_v2)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[5] * sc[9]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[5] + g_RT[9] - g_RT[10])) *
                           (sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 130:  H2v3 + N2v3 <=> H2v2 + N2v4
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v3 - E_H2_v2) - (E_N2_v4 - E_N2_v3)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (3.0 + 1.0) * (1.0 + 3.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[5] * sc[10]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[5] + g_RT[10] - g_RT[11])) *
                           (sc[4] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 131:  H2v3 + N2v4 <=> H2v2 + N2v5
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v3 - E_H2_v2) - (E_N2_v5 - E_N2_v4)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (4.0 + 1.0) * (1.0 + 4.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[5] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[5] + g_RT[11] - g_RT[12])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 132:  H2v3 + N2v5 <=> H2v2 + N2v6
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v3 - E_H2_v2) - (E_N2_v6 - E_N2_v5)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (5.0 + 1.0) * (1.0 + 5.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[5] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[5] + g_RT[12] - g_RT[13])) *
                           (sc[4] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 133:  H2v3 + N2v6 <=> H2v2 + N2v7
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v3 - E_H2_v2) - (E_N2_v7 - E_N2_v6)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (6.0 + 1.0) * (1.0 + 6.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[5] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[5] + g_RT[13] - g_RT[14])) *
                           (sc[4] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[13] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 134:  H2v3 + N2v7 <=> H2v2 + N2v8
    const amrex::Real F_vw = exp(-A_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v3 - E_H2_v2) - (E_N2_v8 - E_N2_v7)) / (E10_H2- E10_N2)) );
    const amrex::Real delta_v_H2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (7.0 + 1.0) * (1.0 + 7.0 * DeltaE_N2/E10_N2);
    const amrex::Real k_f = Q0_N2H2 * delta_v_H2 * delta_v_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[5] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[5] + g_RT[14] - g_RT[15])) *
                           (sc[4] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 135:  H2 + N2v2 <=> H2v1 + N2
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v1 - 0.0) - (E_N2_v2 - 0.0)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[2] * sc[9]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[7] + g_RT[9])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[7] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 136:  H2 + N2v3 <=> H2v1 + N2v1
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v1 - 0.0) - (E_N2_v3 - E_N2_v1)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[2] * sc[10]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[8] + g_RT[10])) * (sc[3] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[8] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 137:  H2 + N2v4 <=> H2v1 + N2v2
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v1 - 0.0) - (E_N2_v4 - E_N2_v2)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[2] * sc[11]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[9] + g_RT[11])) * (sc[3] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[9] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 138:  H2 + N2v5 <=> H2v1 + N2v3
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v1 - 0.0) - (E_N2_v5 - E_N2_v3)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (3.0 + 1.0) * (1.0 + 3.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[2] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[3] - g_RT[10] + g_RT[12])) *
                           (sc[3] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[10] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 139:  H2 + N2v6 <=> H2v1 + N2v4
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v1 - 0.0) - (E_N2_v6 - E_N2_v4)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (4.0 + 1.0) * (1.0 + 4.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[3] - g_RT[11] + g_RT[13])) *
                           (sc[3] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[11] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 140:  H2 + N2v7 <=> H2v1 + N2v5
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v1 - 0.0) - (E_N2_v7 - E_N2_v5)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (5.0 + 1.0) * (1.0 + 5.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[3] - g_RT[12] + g_RT[14])) *
                           (sc[3] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 141:  H2 + N2v8 <=> H2v1 + N2v6
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v1 - 0.0) - (E_N2_v8 - E_N2_v6)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (6.0 + 1.0) * (1.0 + 6.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[3] - g_RT[13] + g_RT[15])) *
                           (sc[3] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 142:  H2v1 + N2v2 <=> H2v2 + N2
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v2 - E_H2_v1) - (E_N2_v2 - 0.0)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[3] * sc[9]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[7] + g_RT[9])) * (sc[4] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[7] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 143:  H2v1 + N2v3 <=> H2v2 + N2v1
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v2 - E_H2_v1) - (E_N2_v3 - E_N2_v1)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[3] * sc[10]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[8] + g_RT[10])) * (sc[4] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 144:  H2v1 + N2v4 <=> H2v2 + N2v2
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v2 - E_H2_v1) - (E_N2_v4 - E_N2_v2)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[3] * sc[11]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[9] + g_RT[11])) * (sc[4] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[9] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 145:  H2v1 + N2v5 <=> H2v2 + N2v3
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v2 - E_H2_v1) - (E_N2_v5 - E_N2_v3)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (3.0 + 1.0) * (1.0 + 3.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[4] - g_RT[10] + g_RT[12])) *
                           (sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 146:  H2v1 + N2v6 <=> H2v2 + N2v4
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v2 - E_H2_v1) - (E_N2_v6 - E_N2_v4)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (4.0 + 1.0) * (1.0 + 4.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[3] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[4] - g_RT[11] + g_RT[13])) *
                           (sc[4] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[11] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 147:  H2v1 + N2v7 <=> H2v2 + N2v5
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v2 - E_H2_v1) - (E_N2_v7 - E_N2_v5)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (5.0 + 1.0) * (1.0 + 5.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[4] - g_RT[12] + g_RT[14])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 148:  H2v1 + N2v8 <=> H2v2 + N2v6
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v2 - E_H2_v1) - (E_N2_v8 - E_N2_v6)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (6.0 + 1.0) * (1.0 + 6.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[3] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[4] - g_RT[13] + g_RT[15])) *
                           (sc[4] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 149:  H2v2 + N2v2 <=> H2v3 + N2
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v3 - E_H2_v2) - (E_N2_v2 - 0.0)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (0.0 + 1.0) * (1.0 + 0.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[7] + g_RT[9])) * (sc[5] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[7] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 150:  H2v2 + N2v3 <=> H2v3 + N2v1
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v3 - E_H2_v2) - (E_N2_v3 - E_N2_v1)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (1.0 + 1.0) * (1.0 + 1.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[8] + g_RT[10])) * (sc[5] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 151:  H2v2 + N2v4 <=> H2v3 + N2v2
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v3 - E_H2_v2) - (E_N2_v4 - E_N2_v2)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[4] * sc[11]);
    const amrex::Real qr =
        k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[9] + g_RT[11])) * (sc[5] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[9] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 152:  H2v2 + N2v5 <=> H2v3 + N2v3
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v3 - E_H2_v2) - (E_N2_v5 - E_N2_v3)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (3.0 + 1.0) * (1.0 + 3.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT[12])) *
                           (sc[5] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 153:  H2v2 + N2v6 <=> H2v3 + N2v4
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v3 - E_H2_v2) - (E_N2_v6 - E_N2_v4)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (4.0 + 1.0) * (1.0 + 4.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[11] + g_RT[13])) *
                           (sc[5] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[11] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 154:  H2v2 + N2v7 <=> H2v3 + N2v5
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v3 - E_H2_v2) - (E_N2_v7 - E_N2_v5)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (5.0 + 1.0) * (1.0 + 5.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[12] + g_RT[14])) *
                           (sc[5] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 155:  H2v2 + N2v8 <=> H2v3 + N2v6
    const amrex::Real F_vw = exp(-Ap_N2H2 / pow(tc[1],0.5) * amrex::Math::abs( ((E_H2_v3 - E_H2_v2) - (E_N2_v8 - E_N2_v6)) / (E10_H2- E20_N2)) );
    const amrex::Real delta_v_H2 = (2.0 + 1.0) * (1.0 + 2.0 * DeltaE_H2/E10_H2);
    const amrex::Real delta_v_N2 = (6.0 + 1.0) * (1.0 + 6.0 * DeltaE_N2/E10_N2);
    const amrex::Real delta_vp_N2 = 0.5 * delta_v_N2 * (delta_v_N2 + 1.0);
    const amrex::Real k_f = Qp0_N2H2 * delta_v_H2 * delta_vp_N2 * F_vw * (1.5 - 0.5*F_vw);
    const amrex::Real qf = k_f * (sc[4] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[13] + g_RT[15])) *
                           (sc[5] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }












  {
    // reaction 156:  N2A3 + N2v6 => N2 + N2B3
    const amrex::Real k_f = 18066422.28;
    const amrex::Real qf = k_f * (sc[13] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[13] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 157:  N2A3 + N2v7 => N2B3 + N2v1
    const amrex::Real k_f = 18066422.28;
    const amrex::Real qf = k_f * (sc[14] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[14] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 158:  N2A3 + N2v8 => N2B3 + N2v2
    const amrex::Real k_f = 18066422.28;
    const amrex::Real qf = k_f * (sc[15] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[15] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 159:  N2 + N2B3 => N2A3 + N2v6
    const amrex::Real k_f = 18066422.28;
    const amrex::Real qf = k_f * (sc[7] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[13] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 160:  N2B3 + N2v1 => N2A3 + N2v7
    const amrex::Real k_f = 18066422.28;
    const amrex::Real qf = k_f * (sc[8] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[14] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 161:  N2B3 + N2v2 => N2A3 + N2v8
    const amrex::Real k_f = 18066422.28;
    const amrex::Real qf = k_f * (sc[9] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[15] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 162:  N2B3 => N2A3
    const amrex::Real k_f = 135000;
    const amrex::Real qf = k_f * (sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 163:  N2a1 => N2
    const amrex::Real k_f = 100;
    const amrex::Real qf = k_f * (sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 164:  N2C3 => N2B3
    const amrex::Real k_f = 24500000;
    const amrex::Real qf = k_f * (sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[17] += qdot;
    wdot[19] -= qdot;
  }
    
  {
    // FIXME: check exci energy
    // reaction 165:  E + N2 => 2 E + N + N+
    const amrex::Real k_f = 1.0e-6 * (-5.68e-12*TeeV + 8.57e-12*pow(TeeV, 2.0) - 4.11e-12*pow(TeeV, 3.0) + 7.26e-13*pow(TeeV, 4.0) - 3.09e-14*pow(TeeV, 5.0)) * 6.0221408e23;
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += 2.000000 * qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[34] += qdot;
    int rxntype = 2;
    amrex::Real eexci = 18.8;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 166:  E + H2 => 2 E + H + H+
    const amrex::Real k_f = 1.0e-6 * 3.0e-8 * pow(TeeV, 0.44) * exp(-37.72/TeeV) * 6.0221408e23;
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += 2.000000 * qdot;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[31] += qdot;
    int rxntype = 2;
    amrex::Real eexci = 19.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 167:  E + N2+ => 2 N
    const amrex::Real k_f = 54199266840 * pow((0.026/TeeV), 0.39);
    const amrex::Real qf = k_f * (sc[0] * sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[6] += 2.000000 * qdot;
    wdot[35] -= qdot;
    int rxntype = 3;
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 168:  E + N2+ => N + N2D
    const amrex::Real k_f = 48779340156 * pow((0.026/TeeV), 0.39);
    const amrex::Real qf = k_f * (sc[0] * sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[6] += qdot;
    wdot[25] += qdot;
    wdot[35] -= qdot;
    int rxntype = 3;
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 169:  E + N2+ => N + N2P
    const amrex::Real k_f = 5419926684 * pow((0.026/TeeV), 0.39);
    const amrex::Real qf = k_f * (sc[0] * sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[6] += qdot;
    wdot[26] += qdot;
    wdot[35] -= qdot;
    int rxntype = 3;
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 170:  E + N3+ => N + N2
    const amrex::Real k_f = 120442815200 * pow((0.026/TeeV), 0.5);
    const amrex::Real qf = k_f * (sc[0] * sc[36]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[6] += qdot;
    wdot[7] += qdot;
    wdot[36] -= qdot;
    int rxntype = 3;
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 171:  E + N4+ => 2 N2
    const amrex::Real k_f = 1385092374800 * pow((0.026/TeeV), 0.53);
    const amrex::Real qf = k_f * (sc[0] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[7] += 2.000000 * qdot;
    wdot[37] -= qdot;
    int rxntype = 3;
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 172:  E + H2+ => 2 H
    const amrex::Real k_f = 1.0e-6 * (7.51e-9 - 1.12e-9*TeeV + 1.03e-10*pow(TeeV, 2.0) - 4.15e-12*pow(TeeV, 3.0) + 5.86e-14*pow(TeeV, 4.0)) * 6.0221408e23;
    const amrex::Real qf = k_f * (sc[0] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += 2.000000 * qdot;
    wdot[32] -= qdot;
    int rxntype = 3;
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 173:  E + H3+ => 3 H
    const amrex::Real k_f = 1.0e-6 * (4.20e-9 + 1.51e-9*TeeV + 1.90e-10*pow(TeeV, 2.0) + 6.60e-12*pow(TeeV, 3.0) + 1.21e-13*pow(TeeV, 4.0) - 1.15e-14*pow(TeeV, 5.0) + 1.78e-16*pow(TeeV, 6.0)) * 6.0221408e23 ;
    const amrex::Real qf = k_f * (sc[0] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += 3.000000 * qdot;
    wdot[33] -= qdot;
    int rxntype = 3;
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 174:  E + H3+ => H + H2
    const amrex::Real k_f = 1.0e-6 * (4.20e-9 + 1.51e-9*TeeV + 1.90e-10*pow(TeeV, 2.0) + 6.60e-12*pow(TeeV, 3.0) + 1.21e-13*pow(TeeV, 4.0) - 1.15e-14*pow(TeeV, 5.0) + 1.78e-16*pow(TeeV, 6.0)) * 6.0221408e23 ;
    const amrex::Real qf = k_f * (sc[0] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[2] += qdot;
    wdot[33] -= qdot;
    int rxntype = 3;
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 175:  E + NH+ => H + N
    const amrex::Real k_f = 25895205268 * pow((0.026/TeeV), 0.5);
    const amrex::Real qf = k_f * (sc[0] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[6] += qdot;
    wdot[38] -= qdot;
    int rxntype = 3;
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 176:  E + NH2+ => H + NH
    const amrex::Real k_f = 61425835752 * pow((0.026/TeeV), 0.4);
    const amrex::Real qf = k_f * (sc[0] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[27] += qdot;
    wdot[40] -= qdot;
    int rxntype = 3;
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 177:  E + NH2+ => 2 H + N
    const amrex::Real k_f = 119238387048 * pow((0.026/TeeV), 0.4);
    const amrex::Real qf = k_f * (sc[0] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += 2.000000 * qdot;
    wdot[6] += qdot;
    wdot[40] -= qdot;
    int rxntype = 3;
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 178:  E + NH3+ => 2 H + NH
    const amrex::Real k_f = 93343181780 * pow((0.026/TeeV), 0.5);
    const amrex::Real qf = k_f * (sc[0] * sc[41]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += 2.000000 * qdot;
    wdot[27] += qdot;
    wdot[41] -= qdot;
    int rxntype = 3;
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 179:  E + NH3+ => H + NH2
    const amrex::Real k_f = 93343181780 * pow((0.026/TeeV), 0.5);
    const amrex::Real qf = k_f * (sc[0] * sc[41]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[28] += qdot;
    wdot[41] -= qdot;
    int rxntype = 3;
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 180:  E + NH4+ => H + NH3
    const amrex::Real k_f = 482373474876 * pow((0.026/TeeV), 0.605);
    const amrex::Real qf = k_f * (sc[0] * sc[42]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[29] += qdot;
    wdot[42] -= qdot;
    int rxntype = 3;
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 181:  E + NH4+ => 2 H + NH2
    const amrex::Real k_f = 74072331348 * pow((0.026/TeeV), 0.605);
    const amrex::Real qf = k_f * (sc[0] * sc[42]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += 2.000000 * qdot;
    wdot[28] += qdot;
    wdot[42] -= qdot;
    int rxntype = 3;
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 182:  E + N2H+ => H + N2
    const amrex::Real k_f = 427571993960 * pow((0.026/TeeV), 0.72);
    const amrex::Real qf = k_f * (sc[0] * sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[7] += qdot;
    wdot[39] -= qdot;
    int rxntype = 3;
    amrex::Real eexci = 0.0;
    int elidx = 0;
    comp_ener_exch(qf, qr, sc, k_f, rxntype, eexci, elidx, enerExch, Ue, tc[1], Te);
  }

  {
    // reaction 183:  H2 + N2+ => H + N2H+
    const amrex::Real k_f = 1204428152;
    const amrex::Real qf = k_f * (sc[2] * sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[35] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 184:  N2+ + N2A3 => N + N3+
    const amrex::Real k_f = 180664222.8;
    const amrex::Real qf = k_f * (sc[16] * sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[16] -= qdot;
    wdot[35] -= qdot;
    wdot[36] += qdot;
  }

  {
    // reaction 185:  N + N2+ => N+ + N2
    const amrex::Real mu_N2p = specMob(N2p_ID, Te, ndens, emag, tc[1]);
    const amrex::Real v_ion_sq = pow(emag*mu_N2p, 2);
    const amrex::Real Teff = tc[1] + PI/(6.0*kB) * (N_m*N2p_m / (N_m + N2p_m)) * v_ion_sq;
    const amrex::Real k_f = 433594.13472 * pow((Teff /300.0), 2.2);
    const amrex::Real qf = k_f * (sc[6] * sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[34] += qdot;
    wdot[35] -= qdot;
  }

  {
    // reaction 188:  N2+ + NH3 => N2 + NH3+
    const amrex::Real k_f = 1174317448.2;
    const amrex::Real qf = k_f * (sc[29] * sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[29] -= qdot;
    wdot[35] -= qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 189:  N + N3+ => N2 + N2+
    const amrex::Real k_f = 39746129.016;
    const amrex::Real qf = k_f * (sc[6] * sc[36]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[35] += qdot;
    wdot[36] -= qdot;
  }

  {
    // reaction 190:  N + N4+ => N+ + 2 N2
    const amrex::Real k_f = 6022140.76;
    const amrex::Real qf = k_f * (sc[6] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += 2.000000 * qdot;
    wdot[34] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 192:  H2 + N+ => H + NH+
    const amrex::Real k_f = 301107038;
    const amrex::Real qf = k_f * (sc[2] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[34] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 193:  N+ + NH3 => NH + NH2+
    const amrex::Real k_f = 283040615.72;
    const amrex::Real qf = k_f * (sc[29] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[27] += qdot;
    wdot[29] -= qdot;
    wdot[34] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 194:  N+ + NH3 => N + NH3+
    const amrex::Real k_f = 1005697506.92;
    const amrex::Real qf = k_f * (sc[29] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[29] -= qdot;
    wdot[34] -= qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 195:  N+ + NH3 => H2 + N2H+
    const amrex::Real k_f = 127669384.112;
    const amrex::Real qf = k_f * (sc[29] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[29] -= qdot;
    wdot[34] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 196:  H + H2+ => H+ + H2
    const amrex::Real k_f = 385417008.64;
    const amrex::Real qf = k_f * (sc[1] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 197:  H2 + H2+ => H + H3+
    const amrex::Real k_f = 1204428152;
    const amrex::Real qf = k_f * (sc[2] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[32] -= qdot;
    wdot[33] += qdot;
  }

  {
    // reaction 198:  H2+ + NH3 => H2 + NH3+
    const amrex::Real k_f = 3432620233.2;
    const amrex::Real qf = k_f * (sc[29] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[29] -= qdot;
    wdot[32] -= qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 199:  H2+ + N2 => H + N2H+
    const amrex::Real k_f = 1204428152;
    const amrex::Real qf = k_f * (sc[7] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[7] -= qdot;
    wdot[32] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 200:  H+ + NH3 => H + NH3+
    const amrex::Real k_f = 3131513195.2;
    const amrex::Real qf = k_f * (sc[29] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[29] -= qdot;
    wdot[31] -= qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 201:  H2 + NH+ => H3+ + N
    const amrex::Real k_f = 111409604.06;
    const amrex::Real qf = k_f * (sc[2] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[33] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 202:  H2 + NH+ => H + NH2+
    const amrex::Real k_f = 632324779.8;
    const amrex::Real qf = k_f * (sc[2] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[38] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 203:  NH+ + NH3 => NH + NH3+
    const amrex::Real k_f = 1083985336.8;
    const amrex::Real qf = k_f * (sc[29] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[27] += qdot;
    wdot[29] -= qdot;
    wdot[38] -= qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 204:  NH+ + NH3 => N + NH4+
    const amrex::Real k_f = 361328445.6;
    const amrex::Real qf = k_f * (sc[29] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[29] -= qdot;
    wdot[38] -= qdot;
    wdot[42] += qdot;
  }

  {
    // reaction 205:  N2 + NH+ => N + N2H+
    const amrex::Real k_f = 391439149.4;
    const amrex::Real qf = k_f * (sc[7] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[38] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 206:  H2 + NH2+ => H + NH3+
    const amrex::Real k_f = 117431744.82;
    const amrex::Real qf = k_f * (sc[2] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[40] -= qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 207:  NH2+ + NH3 => NH2 + NH3+
    const amrex::Real k_f = 692546187.4;
    const amrex::Real qf = k_f * (sc[29] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[28] += qdot;
    wdot[29] -= qdot;
    wdot[40] -= qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 208:  NH2+ + NH3 => NH + NH4+
    const amrex::Real k_f = 692546187.4;
    const amrex::Real qf = k_f * (sc[29] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[27] += qdot;
    wdot[29] -= qdot;
    wdot[40] -= qdot;
    wdot[42] += qdot;
  }

  {
    // reaction 209:  NH3 + NH3+ => NH2 + NH4+
    const amrex::Real k_f = 1264649559.6;
    const amrex::Real qf = k_f * (sc[29] * sc[41]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[28] += qdot;
    wdot[29] -= qdot;
    wdot[41] -= qdot;
    wdot[42] += qdot;
  }

  {
    // reaction 210:  N2H+ + NH3 => N2 + NH4+
    const amrex::Real k_f = 1385092374.8;
    const amrex::Real qf = k_f * (sc[29] * sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[29] -= qdot;
    wdot[39] -= qdot;
    wdot[42] += qdot;
  }

  {
    // reaction 211:  N + N2A3 => N + N2
    const amrex::Real k_f = 1204428.152;
    const amrex::Real qf = k_f * (sc[6] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[6] += qdot;
    wdot[7] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 212:  N + N2A3 => N2 + N2P
    const amrex::Real k_f = 24088563.04 * pow(300.0/tc[1] , 2.0/3.0);
    const amrex::Real qf = k_f * (sc[6] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[16] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 213:  N2 + N2A3 => 2 N2
    const amrex::Real k_f = 180.6642228;
    const amrex::Real qf = k_f * (sc[7] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[7] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 214:  2 N2A3 => N2 + N2B3
    const amrex::Real k_f = 180664222.8;
    const amrex::Real qf = k_f * ((sc[16] * sc[16]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[16] -= 2.000000 * qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 215:  2 N2A3 => N2 + N2C3
    const amrex::Real k_f = 90332111.4;
    const amrex::Real qf = k_f * ((sc[16] * sc[16]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[16] -= 2.000000 * qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 216:  2 N2A3 => 2 N + N2
    const amrex::Real k_f = 18066422.28;
    const amrex::Real qf = k_f * ((sc[16] * sc[16]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += 2.000000 * qdot;
    wdot[7] += qdot;
    wdot[16] -= 2.000000 * qdot;
  }

  {
    // reaction 217:  N2 + N2B3 => N2 + N2A3
    const amrex::Real k_f = 18066422.28;
    const amrex::Real qf = k_f * (sc[7] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[7] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 218:  N2 + N2B3 => 2 N2
    const amrex::Real k_f = 1204428.152;
    const amrex::Real qf = k_f * (sc[7] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[7] += 2.000000 * qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 219:  N2 + N2a1 => N2 + N2B3
    const amrex::Real k_f = 114420.67444;
    const amrex::Real qf = k_f * (sc[7] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[7] += qdot;
    wdot[17] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 220:  2 N2a1 => E + N2 + N2+
    const amrex::Real k_f = 6022140.76;
    const amrex::Real qf = k_f * ((sc[18] * sc[18]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[7] += qdot;
    wdot[18] -= 2.000000 * qdot;
    wdot[35] += qdot;
  }

  {
    // reaction 221:  2 N2a1 => E + N4+
    const amrex::Real k_f = 6022140.76;
    const amrex::Real qf = k_f * ((sc[18] * sc[18]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[18] -= 2.000000 * qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 222:  N2A3 + N2a1 => E + N4+
    const amrex::Real k_f = 2408856.304;
    const amrex::Real qf = k_f * (sc[16] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[16] -= qdot;
    wdot[18] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 223:  N2 + N2D => N + N2
    const amrex::Real k_f = 13850.923748 * exp(-510.0 / tc[1]);
    const amrex::Real qf = k_f * (sc[7] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[7] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 224:  N + N2P => 2 N
    const amrex::Real k_f = 1083985.3368;
    const amrex::Real qf = k_f * (sc[6] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[6] += 2.000000 * qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 225:  N + N2P => N + N2D
    const amrex::Real k_f = 361328.4456;
    const amrex::Real qf = k_f * (sc[6] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[6] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 226:  N2 + N2P => N + N2
    const amrex::Real k_f = 36132.84456;
    const amrex::Real qf = k_f * (sc[7] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[7] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 227:  H + N2A3 => H + N2
    const amrex::Real k_f = 30110703.8;
    const amrex::Real qf = k_f * (sc[1] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[7] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 228:  H2 + N2A3 => 2 H + N2
    const amrex::Real k_f = 120442815.2 * exp(-3500.0 / tc[1]);
    const amrex::Real qf = k_f * (sc[2] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[2] -= qdot;
    wdot[7] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 229:  N2A3 + NH3 => N2 + NH3
    const amrex::Real k_f = 96354252.16;
    const amrex::Real qf = k_f * (sc[16] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[16] -= qdot;
    wdot[29] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 230:  H2 + N2B3 => H2 + N2A3
    const amrex::Real k_f = 15055351.9;
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[2] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 231:  H + N2a1 => H + N2
    const amrex::Real k_f = 9033211.14;
    const amrex::Real qf = k_f * (sc[1] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[7] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 232:  H2 + N2a1 => 2 H + N2
    const amrex::Real k_f = 15657565.976;
    const amrex::Real qf = k_f * (sc[2] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[2] -= qdot;
    wdot[7] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 233:  H2v1 + N => H + NH
    const amrex::Real k_f = 240885630.4 * pow(tc[1] / 300.0, 0.5) * exp(-16600.0 / tc[1] + 0.3*0.52*11604.51812 / tc[1]);
    const amrex::Real qf = k_f * (sc[3] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[6] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 234:  H2v2 + N => H + NH
    const amrex::Real k_f = 240885630.4 * pow(tc[1] / 300.0, 0.5) * exp(-16600.0 / tc[1] + 0.3*1.0*11604.51812 / tc[1]);
    const amrex::Real qf = k_f * (sc[4] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[6] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 235:  H2v3 + N => H + NH
    const amrex::Real k_f = 240885630.4 * pow(tc[1] / 300.0, 0.5) * exp(-16600.0 / tc[1] + 0.3*1.5*11604.51812 / tc[1]);
    const amrex::Real qf = k_f * (sc[5] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[6] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 236:  H2B3 + N => H + NH
    const amrex::Real k_f = 240885630.4 * pow(tc[1] / 300.0, 0.5);
    const amrex::Real qf = k_f * (sc[6] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[6] -= qdot;
    wdot[20] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 237:  H2B1 + N => H + NH
    const amrex::Real k_f = 240885630.4 * pow(tc[1] / 300.0, 0.5);
    const amrex::Real qf = k_f * (sc[6] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[6] -= qdot;
    wdot[21] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 238:  H2C3 + N => H + NH
    const amrex::Real k_f = 240885630.4 * pow(tc[1] / 300.0, 0.5);
    const amrex::Real qf = k_f * (sc[6] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[6] -= qdot;
    wdot[22] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 239:  H2A3 + N => H + NH
    const amrex::Real k_f = 240885630.4 * pow(tc[1] / 300.0, 0.5);
    const amrex::Real qf = k_f * (sc[6] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[6] -= qdot;
    wdot[23] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 240:  H2R + N => H + NH
    const amrex::Real k_f = 240885630.4 * pow(tc[1] / 300.0, 0.5);
    const amrex::Real qf = k_f * (sc[6] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[6] -= qdot;
    wdot[24] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 241:  H2 + N2D => H + NH
    const amrex::Real k_f = 1385092.3748;
    const amrex::Real qf = k_f * (sc[2] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[25] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 242:  N2D + NH3 => NH + NH2
    const amrex::Real k_f = 66243548.36;
    const amrex::Real qf = k_f * (sc[25] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[25] -= qdot;
    wdot[27] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 243:  H2 + N2P => H + NH
    const amrex::Real k_f = 15055.3519;
    const amrex::Real qf = k_f * (sc[2] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[26] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 244:  N + NH => H + N2
    const amrex::Real k_f = 30110703.8;
    const amrex::Real qf = k_f * (sc[6] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 245:  H + NH => H2 + N
    const amrex::Real k_f = 32519560.104 * exp(-165.0 / tc[1]);
    const amrex::Real qf = k_f * (sc[1] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[6] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 246:  2 NH => H2 + N2
    const amrex::Real k_f = 30110.7038 * (tc[1] / 300.0);
    const amrex::Real qf = k_f * ((sc[27] * sc[27]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[7] += qdot;
    wdot[27] -= 2.000000 * qdot;
  }

  {
    // reaction 247:  2 NH => N + NH2
    const amrex::Real k_f = 1023763.9292 * pow((tc[1] / 300.0), 1.5);
    const amrex::Real qf = k_f * ((sc[27] * sc[27]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[27] -= 2.000000 * qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 248:  2 NH => 2 H + N2
    const amrex::Real k_f = 51188196.46;
    const amrex::Real qf = k_f * ((sc[27] * sc[27]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[7] += qdot;
    wdot[27] -= 2.000000 * qdot;
  }

  {
    // reaction 249:  H + NH2 => H2 + NH
    const amrex::Real k_f = 39746129.016 * exp(-1840.0 / tc[1]);
    const amrex::Real qf = k_f * (sc[1] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[27] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 250:  N + NH2 => 2 H + N2
    const amrex::Real k_f = 72265689.12;
    const amrex::Real qf = k_f * (sc[6] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 251:  N + NH2 => H2 + N2
    const amrex::Real k_f = 72265689.12;
    const amrex::Real qf = k_f * (sc[6] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 252:  NH + NH2 => N + NH3
    const amrex::Real k_f = 999675.36616;
    const amrex::Real qf = k_f * (sc[27] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[27] -= qdot;
    wdot[28] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 253:  H2 + NH2 => H + NH3
    const amrex::Real k_f = 32519560.104 * exp(-6492.0 / tc[1]);
    const amrex::Real qf = k_f * (sc[2] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[28] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 254:  H + NH3 => H2 + NH2
    const amrex::Real k_f = 50585.982384 * pow((tc[1] / 300.0), 4.1) * exp(-4760.0 / tc[1]);
    const amrex::Real qf = k_f * (sc[1] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[28] += qdot;
    wdot[29] -= qdot;
  }

  {
    // TODO
    // reaction 277:  E + H2 => H + H-
    const amrex::Real k_f = 0;
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 278:  H- + H2+ => 3 H
    const amrex::Real k_f = 120442815200 * (300.0 / tc[1]);
    const amrex::Real qf = k_f * (sc[30] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += 3.000000 * qdot;
    wdot[30] -= qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 279:  H- + H3+ => 2 H + H2
    const amrex::Real k_f = 120442815200 * (300.0 / tc[1]);
    const amrex::Real qf = k_f * (sc[30] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[2] += qdot;
    wdot[30] -= qdot;
    wdot[33] -= qdot;
  }

  {
    // reaction 280:  H- + N2+ => H + N2
    const amrex::Real k_f = 120442815200 * (300.0 / tc[1]);
    const amrex::Real qf = k_f * (sc[30] * sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[7] += qdot;
    wdot[30] -= qdot;
    wdot[35] -= qdot;
  }

  {
    // reaction 281:  H- + N4+ => H + 2 N2
    const amrex::Real k_f = 120442815200 * (300.0 / tc[1]);
    const amrex::Real qf = k_f * (sc[30] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[7] += 2.000000 * qdot;
    wdot[30] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 282:  H- + N2H+ => H2 + N2
    const amrex::Real k_f = 120442815200 * (300.0 / tc[1]);
    const amrex::Real qf = k_f * (sc[30] * sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[7] += qdot;
    wdot[30] -= qdot;
    wdot[39] -= qdot;
  }
}

// compute the production rate for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWC(const amrex::Real T, amrex::Real C[], amrex::Real wdot[],
     const amrex::Real Te, const amrex::Real EN, amrex::Real *ener_exch) {
  productionRate(wdot, C, T, Te, EN, ener_exch);
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRateSurface(amrex::Real *wdot, const amrex::Real *sc, const amrex::Real T) {

}

// compute the production rate for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
SKWC(const amrex::Real T, amrex::Real C[], amrex::Real wdot_surface[]) {

  productionRateSurface(wdot_surface, C, T);
}

//  species unit charge number
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKCHRG(int kcharge[]) {
  kcharge[0] = -1;  // E
  kcharge[1] = 0;   // H
  kcharge[2] = 0;   // H2
  kcharge[3] = 0;   // H2v1
  kcharge[4] = 0;   // H2v2
  kcharge[5] = 0;   // H2v3
  kcharge[6] = 0;   // N
  kcharge[7] = 0;   // N2
  kcharge[8] = 0;   // N2v1
  kcharge[9] = 0;   // N2v2
  kcharge[10] = 0;  // N2v3
  kcharge[11] = 0;  // N2v4
  kcharge[12] = 0;  // N2v5
  kcharge[13] = 0;  // N2v6
  kcharge[14] = 0;  // N2v7
  kcharge[15] = 0;  // N2v8
  kcharge[16] = 0;  // N2A3
  kcharge[17] = 0;  // N2B3
  kcharge[18] = 0;  // N2a1
  kcharge[19] = 0;  // N2C3
  kcharge[20] = 0;  // H2B3
  kcharge[21] = 0;  // H2B1
  kcharge[22] = 0;  // H2C3
  kcharge[23] = 0;  // H2A3
  kcharge[24] = 0;  // H2R
  kcharge[25] = 0;  // N2D
  kcharge[26] = 0;  // N2P
  kcharge[27] = 0;  // NH
  kcharge[28] = 0;  // NH2
  kcharge[29] = 0;  // NH3
  kcharge[30] = -1; // H-
  kcharge[31] = 1;  // H+
  kcharge[32] = 1;  // H2+
  kcharge[33] = 1;  // H3+
  kcharge[34] = 1;  // N+
  kcharge[35] = 1;  // N2+
  kcharge[36] = 1;  // N3+
  kcharge[37] = 1;  // N4+
  kcharge[38] = 1;  // NH+
  kcharge[39] = 1;  // N2H+
  kcharge[40] = 1;  // NH2+
  kcharge[41] = 1;  // NH3+
  kcharge[42] = 1;  // NH4+
}

//  species charge per unit mass
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKCHRGMASS(amrex::Real zk[]) {

  int kchrg[43];
  CKCHRG(kchrg);

  for (int id = 0; id < 43; ++id) {
    zk[id] = 6.02214076e+23 * 1.60217663e-19 * kchrg[id] * imw(id);
  }
}

#endif
